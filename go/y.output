
state 0
	$accept: .Start $end 

	PACKAGE  shift 4
	.  error

	PackageClause  goto 3
	SourceFile  goto 2
	Start  goto 1

state 1
	$accept:  Start.$end 

	$end  accept
	.  error


state 2
	Start:  SourceFile.    (259)

	.  reduce 259 (src line 1632)


state 3
	SourceFile:  PackageClause.; SourceFile1 SourceFile2 

	;  shift 5
	.  error


state 4
	PackageClause:  PACKAGE.NAME 

	NAME  shift 6
	.  error


state 5
	SourceFile:  PackageClause ;.SourceFile1 SourceFile2 
	SourceFile1: .    (255)

	.  reduce 255 (src line 1612)

	SourceFile1  goto 7

state 6
	PackageClause:  PACKAGE NAME.    (187)

	.  reduce 187 (src line 1266)


state 7
	SourceFile:  PackageClause ; SourceFile1.SourceFile2 
	SourceFile1:  SourceFile1.ImportDecl ; 
	SourceFile2: .    (257)

	IMPORT  shift 10
	.  reduce 257 (src line 1622)

	ImportDecl  goto 9
	SourceFile2  goto 8

state 8
	SourceFile:  PackageClause ; SourceFile1 SourceFile2.    (254)
	SourceFile2:  SourceFile2.TopLevelDecl ; 

	CONST  shift 19
	FUNC  shift 18
	TYPE  shift 20
	VAR  shift 21
	.  reduce 254 (src line 1606)

	ConstDecl  goto 15
	Declaration  goto 12
	FunctionDecl  goto 13
	MethodDecl  goto 14
	TopLevelDecl  goto 11
	TypeDecl  goto 16
	VarDecl  goto 17

state 9
	SourceFile1:  SourceFile1 ImportDecl.; 

	;  shift 22
	.  error


state 10
	ImportDecl:  IMPORT.ImportDecl1 
	ImportSpec1: .    (142)

	NAME  shift 29
	(  shift 25
	.  shift 28
	.  reduce 142 (src line 1036)

	ImportDecl1  goto 23
	ImportSpec  goto 24
	ImportSpec1  goto 26
	ImportSpec11  goto 27

state 11
	SourceFile2:  SourceFile2 TopLevelDecl.; 

	;  shift 30
	.  error


state 12
	TopLevelDecl:  Declaration.    (284)

	.  reduce 284 (src line 1748)


state 13
	TopLevelDecl:  FunctionDecl.    (285)

	.  reduce 285 (src line 1753)


state 14
	TopLevelDecl:  MethodDecl.    (286)

	.  reduce 286 (src line 1757)


state 15
	Declaration:  ConstDecl.    (79)

	.  reduce 79 (src line 702)


state 16
	Declaration:  TypeDecl.    (80)

	.  reduce 80 (src line 707)


state 17
	Declaration:  VarDecl.    (81)

	.  reduce 81 (src line 711)


state 18
	FunctionDecl:  FUNC.NAME FunctionDecl1 
	MethodDecl:  FUNC.Receiver NAME MethodDecl1 

	NAME  shift 31
	(  shift 33
	.  error

	Receiver  goto 32

state 19
	ConstDecl:  CONST.ConstDecl1 

	IDENTIFIER_LIST  shift 37
	(  shift 36
	.  error

	ConstDecl1  goto 34
	ConstSpec  goto 35

state 20
	TypeDecl:  TYPE.TypeDecl1 

	NAME  shift 41
	(  shift 40
	.  error

	TypeDecl1  goto 38
	TypeSpec  goto 39

state 21
	VarDecl:  VAR.VarDecl1 

	IDENTIFIER_LIST  shift 45
	(  shift 44
	.  error

	VarDecl1  goto 42
	VarSpec  goto 43

state 22
	SourceFile1:  SourceFile1 ImportDecl ;.    (256)

	.  reduce 256 (src line 1617)


state 23
	ImportDecl:  IMPORT ImportDecl1.    (135)

	.  reduce 135 (src line 998)


state 24
	ImportDecl1:  ImportSpec.    (136)

	.  reduce 136 (src line 1004)


state 25
	ImportDecl1:  (.ImportDecl11 ) 
	ImportDecl11: .    (138)

	.  reduce 138 (src line 1014)

	ImportDecl11  goto 46

state 26
	ImportSpec:  ImportSpec1.ImportPath 

	STRING_LIT  shift 48
	.  error

	ImportPath  goto 47

state 27
	ImportSpec1:  ImportSpec11.    (143)

	.  reduce 143 (src line 1041)


state 28
	ImportSpec11:  ..    (144)

	.  reduce 144 (src line 1046)


state 29
	ImportSpec11:  NAME.    (145)

	.  reduce 145 (src line 1051)


state 30
	SourceFile2:  SourceFile2 TopLevelDecl ;.    (258)

	.  reduce 258 (src line 1627)


state 31
	FunctionDecl:  FUNC NAME.FunctionDecl1 

	(  shift 53
	.  error

	Function  goto 50
	FunctionDecl1  goto 49
	Parameters  goto 52
	Signature  goto 51

state 32
	MethodDecl:  FUNC Receiver.NAME MethodDecl1 

	NAME  shift 54
	.  error


state 33
	Receiver:  (.Receiver1 Receiver2 BaseTypeName ) 
	Receiver1: .    (216)

	NAME  shift 56
	.  reduce 216 (src line 1414)

	Receiver1  goto 55

state 34
	ConstDecl:  CONST ConstDecl1.    (63)

	.  reduce 63 (src line 618)


state 35
	ConstDecl1:  ConstSpec.    (64)

	.  reduce 64 (src line 624)


state 36
	ConstDecl1:  (.ConstDecl11 ) 
	ConstDecl11: .    (66)

	.  reduce 66 (src line 634)

	ConstDecl11  goto 57

state 37
	ConstSpec:  IDENTIFIER_LIST.ConstSpec1 
	ConstSpec1: .    (69)
	ConstSpec11: .    (71)

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	=  reduce 71 (src line 660)
	.  reduce 69 (src line 650)

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	ConstSpec1  goto 58
	ConstSpec11  goto 59
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 60
	TypeLit  goto 62
	TypeName  goto 61

state 38
	TypeDecl:  TYPE TypeDecl1.    (292)

	.  reduce 292 (src line 1788)


state 39
	TypeDecl1:  TypeSpec.    (293)

	.  reduce 293 (src line 1794)


state 40
	TypeDecl1:  (.TypeDecl11 ) 
	TypeDecl11: .    (295)

	.  reduce 295 (src line 1804)

	TypeDecl11  goto 82

state 41
	TypeSpec:  NAME.Type 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 83
	TypeLit  goto 62
	TypeName  goto 61

state 42
	VarDecl:  VAR VarDecl1.    (328)

	.  reduce 328 (src line 1960)


state 43
	VarDecl1:  VarSpec.    (329)

	.  reduce 329 (src line 1966)


state 44
	VarDecl1:  (.VarDecl11 ) 
	VarDecl11: .    (331)

	.  reduce 331 (src line 1976)

	VarDecl11  goto 84

state 45
	VarSpec:  IDENTIFIER_LIST.VarSpec1 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	=  shift 87
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 86
	TypeLit  goto 62
	TypeName  goto 61
	VarSpec1  goto 85

state 46
	ImportDecl1:  ( ImportDecl11.) 
	ImportDecl11:  ImportDecl11.ImportSpec ; 
	ImportSpec1: .    (142)

	NAME  shift 29
	)  shift 88
	.  shift 28
	.  reduce 142 (src line 1036)

	ImportSpec  goto 89
	ImportSpec1  goto 26
	ImportSpec11  goto 27

state 47
	ImportSpec:  ImportSpec1 ImportPath.    (141)

	.  reduce 141 (src line 1030)


state 48
	ImportPath:  STRING_LIT.    (140)

	.  reduce 140 (src line 1024)


state 49
	FunctionDecl:  FUNC NAME FunctionDecl1.    (122)

	.  reduce 122 (src line 928)


state 50
	FunctionDecl1:  Function.    (123)

	.  reduce 123 (src line 934)


state 51
	Function:  Signature.FunctionBody 
	FunctionDecl1:  Signature.    (124)

	{  shift 92
	.  reduce 124 (src line 939)

	Block  goto 91
	FunctionBody  goto 90

state 52
	Signature:  Parameters.    (240)
	Signature:  Parameters.Result 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 53
	*  shift 75
	[  shift 73
	.  reduce 240 (src line 1538)

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	Parameters  goto 94
	PointerType  goto 67
	Result  goto 93
	SliceType  goto 70
	StructType  goto 66
	TypeLit  goto 96
	TypeName  goto 95

state 53
	Parameters:  (.Parameters1 ) 
	Parameters1: .    (196)
	ParameterDecl1: .    (189)

	IDENTIFIER_LIST  shift 100
	)  reduce 196 (src line 1314)
	.  reduce 189 (src line 1278)

	ParameterDecl  goto 98
	ParameterDecl1  goto 99
	Parameters1  goto 97

state 54
	MethodDecl:  FUNC Receiver NAME.MethodDecl1 

	(  shift 53
	.  error

	Function  goto 102
	MethodDecl1  goto 101
	Parameters  goto 52
	Signature  goto 103

state 55
	Receiver:  ( Receiver1.Receiver2 BaseTypeName ) 
	Receiver2: .    (218)

	*  shift 105
	.  reduce 218 (src line 1424)

	Receiver2  goto 104

state 56
	Receiver1:  NAME.    (217)

	.  reduce 217 (src line 1419)


state 57
	ConstDecl1:  ( ConstDecl11.) 
	ConstDecl11:  ConstDecl11.ConstSpec ; 

	IDENTIFIER_LIST  shift 37
	)  shift 106
	.  error

	ConstSpec  goto 107

state 58
	ConstSpec:  IDENTIFIER_LIST ConstSpec1.    (68)

	.  reduce 68 (src line 644)


state 59
	ConstSpec1:  ConstSpec11.= ExpressionList 

	=  shift 108
	.  error


state 60
	ConstSpec11:  Type.    (72)

	.  reduce 72 (src line 665)


state 61
	Type:  TypeName.    (287)

	.  reduce 287 (src line 1762)


state 62
	Type:  TypeLit.    (288)

	.  reduce 288 (src line 1767)


state 63
	Type:  (.Type ) 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 109
	TypeLit  goto 62
	TypeName  goto 61

state 64
	TypeName:  IDENTIFIER_TYPE.    (308)

	.  reduce 308 (src line 1864)


state 65
	TypeLit:  ArrayType.    (300)

	.  reduce 300 (src line 1830)


state 66
	TypeLit:  StructType.    (301)

	.  reduce 301 (src line 1835)


state 67
	TypeLit:  PointerType.    (302)

	.  reduce 302 (src line 1839)


state 68
	TypeLit:  FunctionType.    (303)

	.  reduce 303 (src line 1843)


state 69
	TypeLit:  InterfaceType.    (304)

	.  reduce 304 (src line 1847)


state 70
	TypeLit:  SliceType.    (305)

	.  reduce 305 (src line 1851)


state 71
	TypeLit:  MapType.    (306)

	.  reduce 306 (src line 1855)


state 72
	TypeLit:  ChannelType.    (307)

	.  reduce 307 (src line 1859)


state 73
	ArrayType:  [.ArrayLength ] ElementType 
	SliceType:  [.] ElementType 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	]  shift 111
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayLength  goto 110
	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 112
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 74
	StructType:  STRUCT.{ StructType1 } 

	{  shift 148
	.  error


state 75
	PointerType:  *.BaseType 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	BaseType  goto 149
	ChannelType  goto 72
	ChannelType1  goto 79
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 150
	TypeLit  goto 62
	TypeName  goto 61

state 76
	FunctionType:  FUNC.Signature 

	(  shift 53
	.  error

	Parameters  goto 52
	Signature  goto 151

state 77
	InterfaceType:  INTERFACE.{ InterfaceType1 } 

	{  shift 152
	.  error


state 78
	MapType:  MAP.[ KeyType ] ElementType 

	[  shift 153
	.  error


state 79
	ChannelType:  ChannelType1.ElementType 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	ElementType  goto 154
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 155
	TypeLit  goto 62
	TypeName  goto 61

state 80
	ChannelType1:  CHAN.CHANCOMM 

	CHANCOMM  shift 156
	.  error


state 81
	ChannelType1:  COMMCHAN.    (55)

	.  reduce 55 (src line 575)


state 82
	TypeDecl1:  ( TypeDecl11.) 
	TypeDecl11:  TypeDecl11.TypeSpec ; 

	NAME  shift 41
	)  shift 157
	.  error

	TypeSpec  goto 158

state 83
	TypeSpec:  NAME Type.    (309)

	.  reduce 309 (src line 1870)


state 84
	VarDecl1:  ( VarDecl11.) 
	VarDecl11:  VarDecl11.VarSpec ; 

	IDENTIFIER_LIST  shift 45
	)  shift 159
	.  error

	VarSpec  goto 160

state 85
	VarSpec:  IDENTIFIER_LIST VarSpec1.    (333)

	.  reduce 333 (src line 1986)


state 86
	VarSpec1:  Type.VarSpec11 
	VarSpec11: .    (336)

	=  shift 162
	.  reduce 336 (src line 2002)

	VarSpec11  goto 161

state 87
	VarSpec1:  =.ExpressionList 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 164
	ExpressionList  goto 163
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 88
	ImportDecl1:  ( ImportDecl11 ).    (137)

	.  reduce 137 (src line 1009)


state 89
	ImportDecl11:  ImportDecl11 ImportSpec.; 

	;  shift 165
	.  error


state 90
	Function:  Signature FunctionBody.    (120)

	.  reduce 120 (src line 916)


state 91
	FunctionBody:  Block.    (121)

	.  reduce 121 (src line 922)


state 92
	Block:  {.StatementList } 
	StatementList1: .    (276)

	.  reduce 276 (src line 1706)

	StatementList  goto 166
	StatementList1  goto 167

state 93
	Signature:  Parameters Result.    (241)

	.  reduce 241 (src line 1543)


state 94
	Result:  Parameters.    (228)

	.  reduce 228 (src line 1474)


state 95
	Result:  TypeName.    (229)

	.  reduce 229 (src line 1479)


state 96
	Result:  TypeLit.    (230)

	.  reduce 230 (src line 1483)


state 97
	Parameters:  ( Parameters1.) 

	)  shift 168
	.  error


state 98
	Parameters1:  ParameterDecl.ParameterList1 Parameters11 
	ParameterList1: .    (193)

	.  reduce 193 (src line 1298)

	ParameterList1  goto 169

state 99
	ParameterDecl:  ParameterDecl1.ParameterDecl2 Type 
	ParameterDecl2: .    (191)

	DDD  shift 171
	.  reduce 191 (src line 1288)

	ParameterDecl2  goto 170

state 100
	ParameterDecl1:  IDENTIFIER_LIST.    (190)

	.  reduce 190 (src line 1283)


state 101
	MethodDecl:  FUNC Receiver NAME MethodDecl1.    (174)

	.  reduce 174 (src line 1200)


state 102
	MethodDecl1:  Function.    (175)

	.  reduce 175 (src line 1206)


state 103
	Function:  Signature.FunctionBody 
	MethodDecl1:  Signature.    (176)

	{  shift 92
	.  reduce 176 (src line 1211)

	Block  goto 91
	FunctionBody  goto 90

state 104
	Receiver:  ( Receiver1 Receiver2.BaseTypeName ) 

	IDENTIFIER_TYPE  shift 173
	.  error

	BaseTypeName  goto 172

state 105
	Receiver2:  *.    (219)

	.  reduce 219 (src line 1429)


state 106
	ConstDecl1:  ( ConstDecl11 ).    (65)

	.  reduce 65 (src line 629)


state 107
	ConstDecl11:  ConstDecl11 ConstSpec.; 

	;  shift 174
	.  error


state 108
	ConstSpec1:  ConstSpec11 =.ExpressionList 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 164
	ExpressionList  goto 175
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 109
	Type:  ( Type.) 

	)  shift 176
	.  error


state 110
	ArrayType:  [ ArrayLength.] ElementType 

	]  shift 177
	.  error


state 111
	SliceType:  [ ].ElementType 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	ElementType  goto 178
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 155
	TypeLit  goto 62
	TypeName  goto 61

state 112
	ArrayLength:  Expression.    (6)
	Expression:  Expression.Binary_op UnaryExpr 

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 6 (src line 340)

	Binary_op  goto 179

state 113
	Expression:  UnaryExpr.    (99)

	.  reduce 99 (src line 806)


state 114
	UnaryExpr:  PrimaryExpr1.PrimaryExpr2 
	PrimaryExpr2: .    (205)

	.  reduce 205 (src line 1360)

	PrimaryExpr2  goto 199

state 115
	UnaryExpr:  +.UnaryExpr 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 200

state 116
	UnaryExpr:  -.UnaryExpr 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 201

state 117
	UnaryExpr:  !.UnaryExpr 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 202

state 118
	UnaryExpr:  ^.UnaryExpr 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 203

state 119
	PointerType:  *.BaseType 
	UnaryExpr:  *.UnaryExpr 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BaseType  goto 149
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 205
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 204

state 120
	UnaryExpr:  &.UnaryExpr 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 206

state 121
	UnaryExpr:  COMM.UnaryExpr 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 207

state 122
	PrimaryExpr1:  Operand.    (202)

	.  reduce 202 (src line 1346)


state 123
	PrimaryExpr1:  Conversion.    (203)

	.  reduce 203 (src line 1351)


state 124
	PrimaryExpr1:  BuiltinCall.    (204)

	.  reduce 204 (src line 1355)


state 125
	Operand:  Literal.    (183)

	.  reduce 183 (src line 1248)


state 126
	Operand:  IDENTIFIER_OPERAND.    (184)

	.  reduce 184 (src line 1253)


state 127
	Operand:  MethodExpr.    (185)

	.  reduce 185 (src line 1257)


state 128
	Operand:  (.Expression ) 
	ReceiverType:  (.* TypeName ) 
	ReceiverType:  (.TypeName ) 
	Type:  (.Type ) 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 209
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 208
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 211
	TypeLit  goto 62
	TypeName  goto 210
	UnaryExpr  goto 113

state 129
	Conversion:  Type.( Expression Conversion1 ) 

	(  shift 212
	.  error


state 130
	BuiltinCall:  IDENTIFIER_BUILT_IN.( BuiltinCall1 ) 

	(  shift 213
	.  error


state 131
	Literal:  BasicLit.    (159)

	.  reduce 159 (src line 1128)


state 132
	Literal:  CompositeLit.    (160)

	.  reduce 160 (src line 1133)


state 133
	Literal:  FunctionLit.    (161)

	.  reduce 161 (src line 1137)


state 134
	MethodExpr:  ReceiverType.. MethodName 

	.  shift 214
	.  error


state 135
	LiteralType:  TypeName.    (167)
	ReceiverType:  TypeName.    (220)
	Type:  TypeName.    (287)

	{  reduce 167 (src line 1163)
	.  reduce 220 (src line 1434)
	.  reduce 287 (src line 1762)


state 136
	BasicLit:  INT_LIT.    (11)

	.  reduce 11 (src line 370)


state 137
	BasicLit:  FLOAT_LIT.    (12)

	.  reduce 12 (src line 375)


state 138
	BasicLit:  IMAGINARY_LIT.    (13)

	.  reduce 13 (src line 379)


state 139
	BasicLit:  RUNE_LIT.    (14)

	.  reduce 14 (src line 383)


state 140
	BasicLit:  STRING_LIT.    (15)

	.  reduce 15 (src line 387)


state 141
	CompositeLit:  LiteralType.LiteralValue 

	{  shift 216
	.  error

	LiteralValue  goto 215

state 142
	FunctionLit:  FUNC.Function 
	FunctionType:  FUNC.Signature 

	(  shift 53
	.  error

	Function  goto 217
	Parameters  goto 52
	Signature  goto 218

state 143
	LiteralType:  ArrayType.    (163)
	TypeLit:  ArrayType.    (300)

	{  reduce 163 (src line 1147)
	.  reduce 300 (src line 1830)


state 144
	LiteralType:  StructType.    (162)
	TypeLit:  StructType.    (301)

	{  reduce 162 (src line 1142)
	.  reduce 301 (src line 1835)


state 145
	LiteralType:  SliceType.    (165)
	TypeLit:  SliceType.    (305)

	{  reduce 165 (src line 1155)
	.  reduce 305 (src line 1851)


state 146
	LiteralType:  MapType.    (166)
	TypeLit:  MapType.    (306)

	{  reduce 166 (src line 1159)
	.  reduce 306 (src line 1855)


state 147
	ArrayType:  [.ArrayLength ] ElementType 
	LiteralType:  [.DDD ] ElementType 
	SliceType:  [.] ElementType 

	COMM  shift 121
	COMMCHAN  shift 81
	DDD  shift 219
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	]  shift 111
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayLength  goto 110
	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 112
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 148
	StructType:  STRUCT {.StructType1 } 
	StructType1: .    (279)

	.  reduce 279 (src line 1722)

	StructType1  goto 220

state 149
	PointerType:  * BaseType.    (200)

	.  reduce 200 (src line 1334)


state 150
	BaseType:  Type.    (9)

	.  reduce 9 (src line 358)


state 151
	FunctionType:  FUNC Signature.    (126)

	.  reduce 126 (src line 950)


state 152
	InterfaceType:  INTERFACE {.InterfaceType1 } 
	InterfaceType1: .    (152)

	.  reduce 152 (src line 1090)

	InterfaceType1  goto 221

state 153
	MapType:  MAP [.KeyType ] ElementType 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	FunctionType  goto 68
	InterfaceType  goto 69
	KeyType  goto 222
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 223
	TypeLit  goto 62
	TypeName  goto 61

state 154
	ChannelType:  ChannelType1 ElementType.    (53)

	.  reduce 53 (src line 564)


state 155
	ElementType:  Type.    (88)

	.  reduce 88 (src line 748)


state 156
	ChannelType1:  CHAN CHANCOMM.    (54)

	.  reduce 54 (src line 570)


state 157
	TypeDecl1:  ( TypeDecl11 ).    (294)

	.  reduce 294 (src line 1799)


state 158
	TypeDecl11:  TypeDecl11 TypeSpec.; 

	;  shift 224
	.  error


state 159
	VarDecl1:  ( VarDecl11 ).    (330)

	.  reduce 330 (src line 1971)


state 160
	VarDecl11:  VarDecl11 VarSpec.; 

	;  shift 225
	.  error


state 161
	VarSpec1:  Type VarSpec11.    (334)

	.  reduce 334 (src line 1992)


state 162
	VarSpec11:  =.ExpressionList 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 164
	ExpressionList  goto 226
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 163
	ExpressionList:  ExpressionList., Expression 
	VarSpec1:  = ExpressionList.    (335)

	,  shift 227
	.  reduce 335 (src line 1997)


state 164
	Expression:  Expression.Binary_op UnaryExpr 
	ExpressionList:  Expression.    (101)

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 101 (src line 816)

	Binary_op  goto 179

state 165
	ImportDecl11:  ImportDecl11 ImportSpec ;.    (139)

	.  reduce 139 (src line 1019)


state 166
	Block:  { StatementList.} 

	}  shift 228
	.  error


state 167
	StatementList:  StatementList1.    (275)
	StatementList1:  StatementList1.Statement ; 
	EmptyStmt: .    (89)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_LABEL  shift 245
	IDENTIFIER_LIST  shift 267
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	BREAK  shift 254
	CHAN  shift 80
	CONST  shift 19
	CONTINUE  shift 255
	DEFER  shift 263
	FALLTHROUGH  shift 257
	FOR  shift 262
	FUNC  shift 142
	GO  shift 252
	GOTO  shift 256
	IF  shift 258
	INTERFACE  shift 77
	MAP  shift 78
	RETURN  shift 253
	SELECT  shift 261
	STRUCT  shift 74
	SWITCH  shift 268
	TYPE  shift 20
	VAR  shift 21
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	{  shift 92
	;  reduce 89 (src line 754)
	!  shift 117
	.  reduce 275 (src line 1700)

	ArrayType  goto 143
	Assignment  goto 250
	BasicLit  goto 131
	Block  goto 239
	BreakStmt  goto 235
	BuiltinCall  goto 124
	Channel  goto 265
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	ConstDecl  goto 15
	ContinueStmt  goto 236
	Conversion  goto 123
	Declaration  goto 230
	DeferStmt  goto 244
	EmptyStmt  goto 246
	ExprSwitchStmt  goto 259
	Expression  goto 264
	ExpressionList  goto 266
	ExpressionStmt  goto 247
	FallthroughStmt  goto 238
	ForStmt  goto 243
	FunctionLit  goto 133
	FunctionType  goto 68
	GoStmt  goto 233
	GotoStmt  goto 237
	IfStmt  goto 240
	IncDecStmt  goto 249
	InterfaceType  goto 69
	LabeledStmt  goto 231
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	ReturnStmt  goto 234
	SelectStmt  goto 242
	SendStmt  goto 248
	ShortVarDecl  goto 251
	SimpleStmt  goto 232
	SliceType  goto 145
	Statement  goto 229
	StructType  goto 144
	SwitchStmt  goto 241
	Type  goto 129
	TypeDecl  goto 16
	TypeLit  goto 62
	TypeName  goto 135
	TypeSwitchStmt  goto 260
	UnaryExpr  goto 113
	VarDecl  goto 17

state 168
	Parameters:  ( Parameters1 ).    (195)

	.  reduce 195 (src line 1308)


state 169
	ParameterList1:  ParameterList1., ParameterDecl 
	Parameters1:  ParameterDecl ParameterList1.Parameters11 
	Parameters11: .    (198)

	,  shift 269
	.  reduce 198 (src line 1324)

	Parameters11  goto 270

state 170
	ParameterDecl:  ParameterDecl1 ParameterDecl2.Type 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 271
	TypeLit  goto 62
	TypeName  goto 61

state 171
	ParameterDecl2:  DDD.    (192)

	.  reduce 192 (src line 1293)


state 172
	Receiver:  ( Receiver1 Receiver2 BaseTypeName.) 

	)  shift 272
	.  error


state 173
	BaseTypeName:  IDENTIFIER_TYPE.    (10)

	.  reduce 10 (src line 364)


state 174
	ConstDecl11:  ConstDecl11 ConstSpec ;.    (67)

	.  reduce 67 (src line 639)


state 175
	ConstSpec1:  ConstSpec11 = ExpressionList.    (70)
	ExpressionList:  ExpressionList., Expression 

	,  shift 227
	.  reduce 70 (src line 655)


state 176
	Type:  ( Type ).    (289)

	.  reduce 289 (src line 1771)


state 177
	ArrayType:  [ ArrayLength ].ElementType 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	ElementType  goto 273
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 155
	TypeLit  goto 62
	TypeName  goto 61

state 178
	SliceType:  [ ] ElementType.    (253)

	.  reduce 253 (src line 1600)


state 179
	Expression:  Expression Binary_op.UnaryExpr 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 274

state 180
	Binary_op:  OROR.    (16)

	.  reduce 16 (src line 392)


state 181
	Binary_op:  ANDAND.    (17)

	.  reduce 17 (src line 397)


state 182
	Binary_op:  EQ.    (18)

	.  reduce 18 (src line 401)


state 183
	Binary_op:  NE.    (19)

	.  reduce 19 (src line 405)


state 184
	Binary_op:  <.    (20)

	.  reduce 20 (src line 409)


state 185
	Binary_op:  LE.    (21)

	.  reduce 21 (src line 413)


state 186
	Binary_op:  >.    (22)

	.  reduce 22 (src line 417)


state 187
	Binary_op:  GE.    (23)

	.  reduce 23 (src line 421)


state 188
	Binary_op:  +.    (24)

	.  reduce 24 (src line 425)


state 189
	Binary_op:  -.    (25)

	.  reduce 25 (src line 429)


state 190
	Binary_op:  |.    (26)

	.  reduce 26 (src line 433)


state 191
	Binary_op:  ^.    (27)

	.  reduce 27 (src line 437)


state 192
	Binary_op:  *.    (28)

	.  reduce 28 (src line 441)


state 193
	Binary_op:  /.    (29)

	.  reduce 29 (src line 445)


state 194
	Binary_op:  %.    (30)

	.  reduce 30 (src line 449)


state 195
	Binary_op:  LSH.    (31)

	.  reduce 31 (src line 453)


state 196
	Binary_op:  RSH.    (32)

	.  reduce 32 (src line 457)


state 197
	Binary_op:  &.    (33)

	.  reduce 33 (src line 461)


state 198
	Binary_op:  ANDNOT.    (34)

	.  reduce 34 (src line 465)


state 199
	PrimaryExpr2:  PrimaryExpr2.PrimaryExpr21 
	UnaryExpr:  PrimaryExpr1 PrimaryExpr2.    (318)

	(  shift 283
	[  shift 282
	.  shift 281
	.  reduce 318 (src line 1916)

	Call  goto 280
	Index  goto 277
	PrimaryExpr21  goto 275
	Selector  goto 276
	Slice  goto 278
	TypeAssertion  goto 279

state 200
	UnaryExpr:  + UnaryExpr.    (319)

	.  reduce 319 (src line 1921)


state 201
	UnaryExpr:  - UnaryExpr.    (320)

	.  reduce 320 (src line 1925)


state 202
	UnaryExpr:  ! UnaryExpr.    (321)

	.  reduce 321 (src line 1929)


state 203
	UnaryExpr:  ^ UnaryExpr.    (322)

	.  reduce 322 (src line 1933)


state 204
	UnaryExpr:  * UnaryExpr.    (323)

	.  reduce 323 (src line 1937)


state 205
	BaseType:  Type.    (9)
	Conversion:  Type.( Expression Conversion1 ) 

	(  shift 212
	.  reduce 9 (src line 358)


state 206
	UnaryExpr:  & UnaryExpr.    (324)

	.  reduce 324 (src line 1941)


state 207
	UnaryExpr:  COMM UnaryExpr.    (325)

	.  reduce 325 (src line 1945)


state 208
	Expression:  Expression.Binary_op UnaryExpr 
	Operand:  ( Expression.) 

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	)  shift 284
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  error

	Binary_op  goto 179

state 209
	PointerType:  *.BaseType 
	ReceiverType:  ( *.TypeName ) 
	UnaryExpr:  *.UnaryExpr 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BaseType  goto 149
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 205
	TypeLit  goto 62
	TypeName  goto 285
	UnaryExpr  goto 204

state 210
	LiteralType:  TypeName.    (167)
	ReceiverType:  TypeName.    (220)
	ReceiverType:  ( TypeName.) 
	Type:  TypeName.    (287)

	{  reduce 167 (src line 1163)
	.  reduce 220 (src line 1434)
	.  reduce 287 (src line 1762)


state 211
	Conversion:  Type.( Expression Conversion1 ) 
	Type:  ( Type.) 

	(  shift 212
	)  shift 176
	.  error


state 212
	Conversion:  Type (.Expression Conversion1 ) 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 287
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 213
	BuiltinCall:  IDENTIFIER_BUILT_IN (.BuiltinCall1 ) 
	BuiltinCall1: .    (43)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  reduce 43 (src line 512)

	ArgumentList  goto 291
	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinArgs  goto 289
	BuiltinCall  goto 124
	BuiltinCall1  goto 288
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 164
	ExpressionList  goto 292
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 290
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 214
	MethodExpr:  ReceiverType ..MethodName 

	IDENTIFIER_METHOD  shift 294
	.  error

	MethodName  goto 293

state 215
	CompositeLit:  LiteralType LiteralValue.    (61)

	.  reduce 61 (src line 606)


state 216
	LiteralValue:  {.LiteralValue1 } 
	LiteralValue1: .    (169)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_FIELD  shift 303
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	{  shift 216
	!  shift 117
	.  reduce 169 (src line 1174)

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Element  goto 296
	ElementIndex  goto 302
	Expression  goto 299
	FieldName  goto 301
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Key  goto 298
	Literal  goto 125
	LiteralType  goto 141
	LiteralValue  goto 300
	LiteralValue1  goto 295
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113
	Value  goto 297

state 217
	FunctionLit:  FUNC Function.    (125)

	.  reduce 125 (src line 944)


state 218
	Function:  Signature.FunctionBody 
	FunctionType:  FUNC Signature.    (126)

	{  shift 92
	.  reduce 126 (src line 950)

	Block  goto 91
	FunctionBody  goto 90

state 219
	LiteralType:  [ DDD.] ElementType 

	]  shift 304
	.  error


state 220
	StructType:  STRUCT { StructType1.} 
	StructType1:  StructType1.FieldDecl ; 
	AnonymousField1: .    (2)

	IDENTIFIER_LIST  shift 308
	*  shift 311
	}  shift 305
	.  reduce 2 (src line 320)

	AnonymousField  goto 309
	AnonymousField1  goto 310
	FieldDecl  goto 306
	FieldDecl1  goto 307

state 221
	InterfaceType:  INTERFACE { InterfaceType1.} 
	InterfaceType1:  InterfaceType1.MethodSpec ; 

	NAME  shift 314
	}  shift 312
	.  error

	MethodSpec  goto 313

state 222
	MapType:  MAP [ KeyType.] ElementType 

	]  shift 315
	.  error


state 223
	KeyType:  Type.    (156)

	.  reduce 156 (src line 1110)


state 224
	TypeDecl11:  TypeDecl11 TypeSpec ;.    (296)

	.  reduce 296 (src line 1809)


state 225
	VarDecl11:  VarDecl11 VarSpec ;.    (332)

	.  reduce 332 (src line 1981)


state 226
	ExpressionList:  ExpressionList., Expression 
	VarSpec11:  = ExpressionList.    (337)

	,  shift 227
	.  reduce 337 (src line 2007)


state 227
	ExpressionList:  ExpressionList ,.Expression 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 316
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 228
	Block:  { StatementList }.    (35)

	.  reduce 35 (src line 470)


state 229
	StatementList1:  StatementList1 Statement.; 

	;  shift 317
	.  error


state 230
	Statement:  Declaration.    (260)

	.  reduce 260 (src line 1638)


state 231
	Statement:  LabeledStmt.    (261)

	.  reduce 261 (src line 1643)


state 232
	Statement:  SimpleStmt.    (262)

	.  reduce 262 (src line 1647)


state 233
	Statement:  GoStmt.    (263)

	.  reduce 263 (src line 1651)


state 234
	Statement:  ReturnStmt.    (264)

	.  reduce 264 (src line 1655)


state 235
	Statement:  BreakStmt.    (265)

	.  reduce 265 (src line 1659)


state 236
	Statement:  ContinueStmt.    (266)

	.  reduce 266 (src line 1663)


state 237
	Statement:  GotoStmt.    (267)

	.  reduce 267 (src line 1667)


state 238
	Statement:  FallthroughStmt.    (268)

	.  reduce 268 (src line 1671)


state 239
	Statement:  Block.    (269)

	.  reduce 269 (src line 1675)


state 240
	Statement:  IfStmt.    (270)

	.  reduce 270 (src line 1679)


state 241
	Statement:  SwitchStmt.    (271)

	.  reduce 271 (src line 1683)


state 242
	Statement:  SelectStmt.    (272)

	.  reduce 272 (src line 1687)


state 243
	Statement:  ForStmt.    (273)

	.  reduce 273 (src line 1691)


state 244
	Statement:  DeferStmt.    (274)

	.  reduce 274 (src line 1695)


state 245
	LabeledStmt:  IDENTIFIER_LABEL.Statement 
	EmptyStmt: .    (89)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_LABEL  shift 245
	IDENTIFIER_LIST  shift 267
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	BREAK  shift 254
	CHAN  shift 80
	CONST  shift 19
	CONTINUE  shift 255
	DEFER  shift 263
	FALLTHROUGH  shift 257
	FOR  shift 262
	FUNC  shift 142
	GO  shift 252
	GOTO  shift 256
	IF  shift 258
	INTERFACE  shift 77
	MAP  shift 78
	RETURN  shift 253
	SELECT  shift 261
	STRUCT  shift 74
	SWITCH  shift 268
	TYPE  shift 20
	VAR  shift 21
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	{  shift 92
	!  shift 117
	.  reduce 89 (src line 754)

	ArrayType  goto 143
	Assignment  goto 250
	BasicLit  goto 131
	Block  goto 239
	BreakStmt  goto 235
	BuiltinCall  goto 124
	Channel  goto 265
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	ConstDecl  goto 15
	ContinueStmt  goto 236
	Conversion  goto 123
	Declaration  goto 230
	DeferStmt  goto 244
	EmptyStmt  goto 246
	ExprSwitchStmt  goto 259
	Expression  goto 264
	ExpressionList  goto 266
	ExpressionStmt  goto 247
	FallthroughStmt  goto 238
	ForStmt  goto 243
	FunctionLit  goto 133
	FunctionType  goto 68
	GoStmt  goto 233
	GotoStmt  goto 237
	IfStmt  goto 240
	IncDecStmt  goto 249
	InterfaceType  goto 69
	LabeledStmt  goto 231
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	ReturnStmt  goto 234
	SelectStmt  goto 242
	SendStmt  goto 248
	ShortVarDecl  goto 251
	SimpleStmt  goto 232
	SliceType  goto 145
	Statement  goto 318
	StructType  goto 144
	SwitchStmt  goto 241
	Type  goto 129
	TypeDecl  goto 16
	TypeLit  goto 62
	TypeName  goto 135
	TypeSwitchStmt  goto 260
	UnaryExpr  goto 113
	VarDecl  goto 17

state 246
	SimpleStmt:  EmptyStmt.    (242)

	.  reduce 242 (src line 1548)


state 247
	SimpleStmt:  ExpressionStmt.    (243)

	.  reduce 243 (src line 1553)


state 248
	SimpleStmt:  SendStmt.    (244)

	.  reduce 244 (src line 1557)


state 249
	SimpleStmt:  IncDecStmt.    (245)

	.  reduce 245 (src line 1561)


state 250
	SimpleStmt:  Assignment.    (246)

	.  reduce 246 (src line 1565)


state 251
	SimpleStmt:  ShortVarDecl.    (247)

	.  reduce 247 (src line 1569)


state 252
	GoStmt:  GO.Expression 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 319
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 253
	ReturnStmt:  RETURN.ReturnStmt1 
	ReturnStmt1: .    (232)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  reduce 232 (src line 1494)

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 164
	ExpressionList  goto 321
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	ReturnStmt1  goto 320
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 254
	BreakStmt:  BREAK.BreakStmt1 
	BreakStmt1: .    (37)

	IDENTIFIER_LABEL  shift 324
	.  reduce 37 (src line 482)

	BreakStmt1  goto 322
	Label  goto 323

state 255
	ContinueStmt:  CONTINUE.ContinueStmt1 
	ContinueStmt1: .    (74)

	IDENTIFIER_LABEL  shift 324
	.  reduce 74 (src line 676)

	ContinueStmt1  goto 325
	Label  goto 326

state 256
	GotoStmt:  GOTO.Label 

	IDENTIFIER_LABEL  shift 324
	.  error

	Label  goto 327

state 257
	FallthroughStmt:  FALLTHROUGH.    (104)

	.  reduce 104 (src line 832)


state 258
	IfStmt:  IF.Expression Block IfStmt2 
	IfStmt:  IF.SimpleStmt ; Expression Block IfStmt2 
	EmptyStmt: .    (89)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_LIST  shift 267
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  reduce 89 (src line 754)

	ArrayType  goto 143
	Assignment  goto 250
	BasicLit  goto 131
	BuiltinCall  goto 124
	Channel  goto 265
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	EmptyStmt  goto 246
	Expression  goto 328
	ExpressionList  goto 266
	ExpressionStmt  goto 247
	FunctionLit  goto 133
	FunctionType  goto 68
	IncDecStmt  goto 249
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SendStmt  goto 248
	ShortVarDecl  goto 251
	SimpleStmt  goto 329
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 259
	SwitchStmt:  ExprSwitchStmt.    (281)

	.  reduce 281 (src line 1732)


state 260
	SwitchStmt:  TypeSwitchStmt.    (282)

	.  reduce 282 (src line 1737)


state 261
	SelectStmt:  SELECT.{ SelectStmt1 } 

	{  shift 330
	.  error


state 262
	ForStmt:  FOR.ForStmt1 Block 
	ForStmt1: .    (115)
	EmptyStmt: .    (89)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_LIST  shift 341
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	;  reduce 89 (src line 754)
	!  shift 117
	.  reduce 115 (src line 892)

	ArrayType  goto 143
	Assignment  goto 250
	BasicLit  goto 131
	BuiltinCall  goto 124
	Channel  goto 265
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Condition  goto 333
	Conversion  goto 123
	EmptyStmt  goto 246
	Expression  goto 336
	ExpressionList  goto 340
	ExpressionStmt  goto 247
	ForClause  goto 334
	ForStmt1  goto 331
	ForStmt11  goto 332
	FunctionLit  goto 133
	FunctionType  goto 68
	IncDecStmt  goto 249
	InitStmt  goto 337
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	RangeClause  goto 335
	RangeClause1  goto 338
	ReceiverType  goto 134
	SendStmt  goto 248
	ShortVarDecl  goto 251
	SimpleStmt  goto 339
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 263
	DeferStmt:  DEFER.Expression 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 342
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 264
	Channel:  Expression.    (52)
	Expression:  Expression.Binary_op UnaryExpr 
	ExpressionList:  Expression.    (101)
	ExpressionStmt:  Expression.    (103)
	IncDecStmt:  Expression.IncDecStmt1 

	ANDAND  shift 181
	ANDNOT  shift 198
	COMM  reduce 52 (src line 558)
	DEC  shift 345
	EQ  shift 182
	GE  shift 187
	INC  shift 344
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	{  reduce 103 (src line 826)
	;  reduce 103 (src line 826)
	.  reduce 101 (src line 816)

	Binary_op  goto 179
	IncDecStmt1  goto 343

state 265
	SendStmt:  Channel.COMM Expression 

	COMM  shift 346
	.  error


state 266
	Assignment:  ExpressionList.ASSIGN_OP ExpressionList 
	ExpressionList:  ExpressionList., Expression 

	ASSIGN_OP  shift 347
	,  shift 227
	.  error


state 267
	ShortVarDecl:  IDENTIFIER_LIST.COLAS ExpressionList 

	COLAS  shift 348
	.  error


state 268
	ExprSwitchStmt:  SWITCH.ExprSwitchStmt2 { ExprSwitchStmt3 } 
	ExprSwitchStmt:  SWITCH.SimpleStmt ; ExprSwitchStmt2 { ExprSwitchStmt3 } 
	TypeSwitchStmt:  SWITCH.TypeSwitchGuard { TypeSwitchStmt2 } 
	TypeSwitchStmt:  SWITCH.SimpleStmt ; TypeSwitchGuard { TypeSwitchStmt2 } 
	ExprSwitchStmt2: .    (95)
	EmptyStmt: .    (89)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_LIST  shift 354
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	;  reduce 89 (src line 754)
	!  shift 117
	.  reduce 95 (src line 786)

	ArrayType  goto 143
	Assignment  goto 250
	BasicLit  goto 131
	BuiltinCall  goto 124
	Channel  goto 265
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	EmptyStmt  goto 246
	ExprSwitchStmt2  goto 349
	Expression  goto 352
	ExpressionList  goto 266
	ExpressionStmt  goto 247
	FunctionLit  goto 133
	FunctionType  goto 68
	IncDecStmt  goto 249
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 353
	ReceiverType  goto 134
	SendStmt  goto 248
	ShortVarDecl  goto 251
	SimpleStmt  goto 350
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	TypeSwitchGuard  goto 351
	UnaryExpr  goto 113

state 269
	ParameterList1:  ParameterList1 ,.ParameterDecl 
	Parameters11:  ,.    (199)
	ParameterDecl1: .    (189)

	IDENTIFIER_LIST  shift 100
	)  reduce 199 (src line 1329)
	.  reduce 189 (src line 1278)

	ParameterDecl  goto 355
	ParameterDecl1  goto 99

state 270
	Parameters1:  ParameterDecl ParameterList1 Parameters11.    (197)

	.  reduce 197 (src line 1319)


state 271
	ParameterDecl:  ParameterDecl1 ParameterDecl2 Type.    (188)

	.  reduce 188 (src line 1272)


state 272
	Receiver:  ( Receiver1 Receiver2 BaseTypeName ).    (215)

	.  reduce 215 (src line 1408)


state 273
	ArrayType:  [ ArrayLength ] ElementType.    (7)

	.  reduce 7 (src line 346)


state 274
	Expression:  Expression Binary_op UnaryExpr.    (100)

	.  reduce 100 (src line 811)


state 275
	PrimaryExpr2:  PrimaryExpr2 PrimaryExpr21.    (206)

	.  reduce 206 (src line 1365)


state 276
	PrimaryExpr21:  Selector.    (207)

	.  reduce 207 (src line 1370)


state 277
	PrimaryExpr21:  Index.    (208)

	.  reduce 208 (src line 1375)


state 278
	PrimaryExpr21:  Slice.    (209)

	.  reduce 209 (src line 1379)


state 279
	PrimaryExpr21:  TypeAssertion.    (210)

	.  reduce 210 (src line 1383)


state 280
	PrimaryExpr21:  Call.    (211)

	.  reduce 211 (src line 1387)


state 281
	Selector:  ..IDENTIFIER_SELECTOR 
	TypeAssertion:  ..( Type ) 

	IDENTIFIER_SELECTOR  shift 356
	(  shift 357
	.  error


state 282
	Index:  [.Expression ] 
	Slice:  [.Slice1 : Slice2 ] 
	Slice1: .    (249)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  reduce 249 (src line 1580)

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 358
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	Slice1  goto 359
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 283
	Call:  (.Call1 ) 
	Call1: .    (48)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  reduce 48 (src line 538)

	ArgumentList  goto 361
	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	Call1  goto 360
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 164
	ExpressionList  goto 292
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 284
	Operand:  ( Expression ).    (186)

	.  reduce 186 (src line 1261)


state 285
	LiteralType:  TypeName.    (167)
	ReceiverType:  TypeName.    (220)
	ReceiverType:  ( * TypeName.) 
	Type:  TypeName.    (287)

	{  reduce 167 (src line 1163)
	.  reduce 220 (src line 1434)
	.  reduce 287 (src line 1762)


state 286
	ReceiverType:  ( TypeName ).    (222)

	.  reduce 222 (src line 1443)


state 287
	Conversion:  Type ( Expression.Conversion1 ) 
	Expression:  Expression.Binary_op UnaryExpr 
	Conversion1: .    (77)

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	,  shift 364
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 77 (src line 692)

	Binary_op  goto 179
	Conversion1  goto 363

state 288
	BuiltinCall:  IDENTIFIER_BUILT_IN ( BuiltinCall1.) 

	)  shift 365
	.  error


state 289
	BuiltinCall1:  BuiltinArgs.BuiltinCall11 
	BuiltinCall11: .    (45)

	,  shift 367
	.  reduce 45 (src line 522)

	BuiltinCall11  goto 366

state 290
	BuiltinArgs:  Type.    (39)
	BuiltinArgs:  Type., ArgumentList 
	Conversion:  Type.( Expression Conversion1 ) 

	,  shift 368
	(  shift 212
	.  reduce 39 (src line 492)


state 291
	BuiltinArgs:  ArgumentList.    (41)

	.  reduce 41 (src line 501)


state 292
	ArgumentList:  ExpressionList.    (4)
	ArgumentList:  ExpressionList.DDD 
	ExpressionList:  ExpressionList., Expression 

	DDD  shift 369
	,  shift 227
	.  reduce 4 (src line 330)


state 293
	MethodExpr:  ReceiverType . MethodName.    (177)

	.  reduce 177 (src line 1216)


state 294
	MethodName:  IDENTIFIER_METHOD.    (178)

	.  reduce 178 (src line 1222)


state 295
	LiteralValue:  { LiteralValue1.} 

	}  shift 370
	.  error


state 296
	LiteralValue1:  Element.ElementList1 LiteralValue11 
	ElementList1: .    (86)

	.  reduce 86 (src line 738)

	ElementList1  goto 371

state 297
	Element:  Value.    (83)

	.  reduce 83 (src line 722)


state 298
	Element:  Key.: Value 

	:  shift 372
	.  error


state 299
	ElementIndex:  Expression.    (85)
	Expression:  Expression.Binary_op UnaryExpr 
	Value:  Expression.    (326)

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	:  reduce 85 (src line 732)
	.  reduce 326 (src line 1950)

	Binary_op  goto 179

state 300
	Value:  LiteralValue.    (327)

	.  reduce 327 (src line 1955)


state 301
	Key:  FieldName.    (154)

	.  reduce 154 (src line 1100)


state 302
	Key:  ElementIndex.    (155)

	.  reduce 155 (src line 1105)


state 303
	FieldName:  IDENTIFIER_FIELD.    (110)

	.  reduce 110 (src line 864)


state 304
	LiteralType:  [ DDD ].ElementType 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	ElementType  goto 373
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 155
	TypeLit  goto 62
	TypeName  goto 61

state 305
	StructType:  STRUCT { StructType1 }.    (278)

	.  reduce 278 (src line 1716)


state 306
	StructType1:  StructType1 FieldDecl.; 

	;  shift 374
	.  error


state 307
	FieldDecl:  FieldDecl1.FieldDecl2 
	FieldDecl2: .    (108)

	STRING_LIT  shift 377
	.  reduce 108 (src line 854)

	FieldDecl2  goto 375
	Tag  goto 376

state 308
	FieldDecl1:  IDENTIFIER_LIST.Type 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 378
	TypeLit  goto 62
	TypeName  goto 61

state 309
	FieldDecl1:  AnonymousField.    (107)

	.  reduce 107 (src line 849)


state 310
	AnonymousField:  AnonymousField1.TypeName 

	IDENTIFIER_TYPE  shift 64
	.  error

	TypeName  goto 379

state 311
	AnonymousField1:  *.    (3)

	.  reduce 3 (src line 325)


state 312
	InterfaceType:  INTERFACE { InterfaceType1 }.    (151)

	.  reduce 151 (src line 1084)


state 313
	InterfaceType1:  InterfaceType1 MethodSpec.; 

	;  shift 380
	.  error


state 314
	MethodSpec:  NAME.Signature 
	MethodSpec:  NAME.MethodSpec1 
	MethodSpec1: .    (181)

	(  shift 53
	.  shift 383
	.  reduce 181 (src line 1238)

	MethodSpec1  goto 382
	Parameters  goto 52
	Signature  goto 381

state 315
	MapType:  MAP [ KeyType ].ElementType 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	ElementType  goto 384
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 155
	TypeLit  goto 62
	TypeName  goto 61

state 316
	Expression:  Expression.Binary_op UnaryExpr 
	ExpressionList:  ExpressionList , Expression.    (102)

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 102 (src line 821)

	Binary_op  goto 179

state 317
	StatementList1:  StatementList1 Statement ;.    (277)

	.  reduce 277 (src line 1711)


state 318
	LabeledStmt:  IDENTIFIER_LABEL Statement.    (158)

	.  reduce 158 (src line 1122)


state 319
	Expression:  Expression.Binary_op UnaryExpr 
	GoStmt:  GO Expression.    (127)

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 127 (src line 956)

	Binary_op  goto 179

state 320
	ReturnStmt:  RETURN ReturnStmt1.    (231)

	.  reduce 231 (src line 1488)


state 321
	ExpressionList:  ExpressionList., Expression 
	ReturnStmt1:  ExpressionList.    (233)

	,  shift 227
	.  reduce 233 (src line 1499)


state 322
	BreakStmt:  BREAK BreakStmt1.    (36)

	.  reduce 36 (src line 476)


state 323
	BreakStmt1:  Label.    (38)

	.  reduce 38 (src line 487)


state 324
	Label:  IDENTIFIER_LABEL.    (157)

	.  reduce 157 (src line 1116)


state 325
	ContinueStmt:  CONTINUE ContinueStmt1.    (73)

	.  reduce 73 (src line 670)


state 326
	ContinueStmt1:  Label.    (75)

	.  reduce 75 (src line 681)


state 327
	GotoStmt:  GOTO Label.    (128)

	.  reduce 128 (src line 962)


state 328
	Channel:  Expression.    (52)
	Expression:  Expression.Binary_op UnaryExpr 
	ExpressionList:  Expression.    (101)
	ExpressionStmt:  Expression.    (103)
	IfStmt:  IF Expression.Block IfStmt2 
	IncDecStmt:  Expression.IncDecStmt1 

	ANDAND  shift 181
	ANDNOT  shift 198
	COMM  reduce 52 (src line 558)
	DEC  shift 345
	EQ  shift 182
	GE  shift 187
	INC  shift 344
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	{  shift 92
	;  reduce 103 (src line 826)
	.  reduce 101 (src line 816)

	Binary_op  goto 179
	Block  goto 385
	IncDecStmt1  goto 343

state 329
	IfStmt:  IF SimpleStmt.; Expression Block IfStmt2 

	;  shift 386
	.  error


state 330
	SelectStmt:  SELECT {.SelectStmt1 } 
	SelectStmt1: .    (235)

	.  reduce 235 (src line 1510)

	SelectStmt1  goto 387

state 331
	ForStmt:  FOR ForStmt1.Block 

	{  shift 92
	.  error

	Block  goto 388

state 332
	ForStmt1:  ForStmt11.    (116)

	.  reduce 116 (src line 897)


state 333
	ForStmt11:  Condition.    (117)

	.  reduce 117 (src line 902)


state 334
	ForStmt11:  ForClause.    (118)

	.  reduce 118 (src line 907)


state 335
	ForStmt11:  RangeClause.    (119)

	.  reduce 119 (src line 911)


state 336
	Channel:  Expression.    (52)
	Condition:  Expression.    (62)
	Expression:  Expression.Binary_op UnaryExpr 
	ExpressionList:  Expression.    (101)
	ExpressionStmt:  Expression.    (103)
	IncDecStmt:  Expression.IncDecStmt1 

	ANDAND  shift 181
	ANDNOT  shift 198
	COMM  reduce 52 (src line 558)
	DEC  shift 345
	EQ  shift 182
	GE  shift 187
	INC  shift 344
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	{  reduce 62 (src line 612)
	;  reduce 103 (src line 826)
	.  reduce 101 (src line 816)

	Binary_op  goto 179
	IncDecStmt1  goto 343

state 337
	ForClause:  InitStmt.; ForClause1 ; PostStmt 

	;  shift 389
	.  error


state 338
	RangeClause:  RangeClause1.RANGE Expression 

	RANGE  shift 390
	.  error


state 339
	InitStmt:  SimpleStmt.    (150)

	.  reduce 150 (src line 1078)


state 340
	Assignment:  ExpressionList.ASSIGN_OP ExpressionList 
	ExpressionList:  ExpressionList., Expression 
	RangeClause1:  ExpressionList.= 

	ASSIGN_OP  shift 347
	,  shift 227
	=  shift 391
	.  error


state 341
	RangeClause1:  IDENTIFIER_LIST.COLAS 
	ShortVarDecl:  IDENTIFIER_LIST.COLAS ExpressionList 

	COLAS  shift 392
	.  error


state 342
	DeferStmt:  DEFER Expression.    (82)
	Expression:  Expression.Binary_op UnaryExpr 

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 82 (src line 716)

	Binary_op  goto 179

state 343
	IncDecStmt:  Expression IncDecStmt1.    (146)

	.  reduce 146 (src line 1056)


state 344
	IncDecStmt1:  INC.    (147)

	.  reduce 147 (src line 1062)


state 345
	IncDecStmt1:  DEC.    (148)

	.  reduce 148 (src line 1067)


state 346
	SendStmt:  Channel COMM.Expression 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 393
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 347
	Assignment:  ExpressionList ASSIGN_OP.ExpressionList 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 164
	ExpressionList  goto 394
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 348
	ShortVarDecl:  IDENTIFIER_LIST COLAS.ExpressionList 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 164
	ExpressionList  goto 395
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 349
	ExprSwitchStmt:  SWITCH ExprSwitchStmt2.{ ExprSwitchStmt3 } 

	{  shift 396
	.  error


state 350
	ExprSwitchStmt:  SWITCH SimpleStmt.; ExprSwitchStmt2 { ExprSwitchStmt3 } 
	TypeSwitchStmt:  SWITCH SimpleStmt.; TypeSwitchGuard { TypeSwitchStmt2 } 

	;  shift 397
	.  error


state 351
	TypeSwitchStmt:  SWITCH TypeSwitchGuard.{ TypeSwitchStmt2 } 

	{  shift 398
	.  error


state 352
	Channel:  Expression.    (52)
	ExprSwitchStmt2:  Expression.    (96)
	Expression:  Expression.Binary_op UnaryExpr 
	ExpressionList:  Expression.    (101)
	ExpressionStmt:  Expression.    (103)
	IncDecStmt:  Expression.IncDecStmt1 

	ANDAND  shift 181
	ANDNOT  shift 198
	COMM  reduce 52 (src line 558)
	DEC  shift 345
	EQ  shift 182
	GE  shift 187
	INC  shift 344
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	{  reduce 96 (src line 791)
	;  reduce 103 (src line 826)
	.  reduce 101 (src line 816)

	Binary_op  goto 179
	IncDecStmt1  goto 343

state 353
	TypeSwitchGuard:  PrimaryExpr1.PrimaryExpr2 . ( TYPE ) 
	UnaryExpr:  PrimaryExpr1.PrimaryExpr2 
	PrimaryExpr2: .    (205)

	.  reduce 205 (src line 1360)

	PrimaryExpr2  goto 399

state 354
	ShortVarDecl:  IDENTIFIER_LIST.COLAS ExpressionList 
	TypeSwitchGuard:  IDENTIFIER_LIST.COLAS PrimaryExpr1 PrimaryExpr2 . ( TYPE ) 

	COLAS  shift 400
	.  error


state 355
	ParameterList1:  ParameterList1 , ParameterDecl.    (194)

	.  reduce 194 (src line 1303)


state 356
	Selector:  . IDENTIFIER_SELECTOR.    (237)

	.  reduce 237 (src line 1520)


state 357
	TypeAssertion:  . (.Type ) 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 401
	TypeLit  goto 62
	TypeName  goto 61

state 358
	Expression:  Expression.Binary_op UnaryExpr 
	Index:  [ Expression.] 
	Slice1:  Expression.    (250)

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	]  shift 402
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 250 (src line 1585)

	Binary_op  goto 179

state 359
	Slice:  [ Slice1.: Slice2 ] 

	:  shift 403
	.  error


state 360
	Call:  ( Call1.) 

	)  shift 404
	.  error


state 361
	Call1:  ArgumentList.Call11 
	Call11: .    (50)

	,  shift 406
	.  reduce 50 (src line 548)

	Call11  goto 405

state 362
	ReceiverType:  ( * TypeName ).    (221)

	.  reduce 221 (src line 1439)


state 363
	Conversion:  Type ( Expression Conversion1.) 

	)  shift 407
	.  error


state 364
	Conversion1:  ,.    (78)

	.  reduce 78 (src line 697)


state 365
	BuiltinCall:  IDENTIFIER_BUILT_IN ( BuiltinCall1 ).    (42)

	.  reduce 42 (src line 506)


state 366
	BuiltinCall1:  BuiltinArgs BuiltinCall11.    (44)

	.  reduce 44 (src line 517)


state 367
	BuiltinCall11:  ,.    (46)

	.  reduce 46 (src line 527)


state 368
	BuiltinArgs:  Type ,.ArgumentList 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArgumentList  goto 408
	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 164
	ExpressionList  goto 292
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 369
	ArgumentList:  ExpressionList DDD.    (5)

	.  reduce 5 (src line 335)


state 370
	LiteralValue:  { LiteralValue1 }.    (168)

	.  reduce 168 (src line 1168)


state 371
	ElementList1:  ElementList1., Element 
	LiteralValue1:  Element ElementList1.LiteralValue11 
	LiteralValue11: .    (171)

	,  shift 409
	.  reduce 171 (src line 1184)

	LiteralValue11  goto 410

state 372
	Element:  Key :.Value 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	{  shift 216
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 412
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	LiteralValue  goto 300
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113
	Value  goto 411

state 373
	LiteralType:  [ DDD ] ElementType.    (164)

	.  reduce 164 (src line 1151)


state 374
	StructType1:  StructType1 FieldDecl ;.    (280)

	.  reduce 280 (src line 1727)


state 375
	FieldDecl:  FieldDecl1 FieldDecl2.    (105)

	.  reduce 105 (src line 838)


state 376
	FieldDecl2:  Tag.    (109)

	.  reduce 109 (src line 859)


state 377
	Tag:  STRING_LIT.    (283)

	.  reduce 283 (src line 1742)


state 378
	FieldDecl1:  IDENTIFIER_LIST Type.    (106)

	.  reduce 106 (src line 844)


state 379
	AnonymousField:  AnonymousField1 TypeName.    (1)

	.  reduce 1 (src line 314)


state 380
	InterfaceType1:  InterfaceType1 MethodSpec ;.    (153)

	.  reduce 153 (src line 1095)


state 381
	MethodSpec:  NAME Signature.    (179)

	.  reduce 179 (src line 1228)


state 382
	MethodSpec:  NAME MethodSpec1.    (180)

	.  reduce 180 (src line 1233)


state 383
	MethodSpec1:  ..NAME 

	NAME  shift 413
	.  error


state 384
	MapType:  MAP [ KeyType ] ElementType.    (173)

	.  reduce 173 (src line 1194)


state 385
	IfStmt:  IF Expression Block.IfStmt2 
	IfStmt2: .    (131)

	ELSE  shift 415
	.  reduce 131 (src line 978)

	IfStmt2  goto 414

state 386
	IfStmt:  IF SimpleStmt ;.Expression Block IfStmt2 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 416
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 387
	SelectStmt:  SELECT { SelectStmt1.} 
	SelectStmt1:  SelectStmt1.CommClause 

	CASE  shift 420
	DEFAULT  shift 421
	}  shift 417
	.  error

	CommCase  goto 419
	CommClause  goto 418

state 388
	ForStmt:  FOR ForStmt1 Block.    (114)

	.  reduce 114 (src line 886)


state 389
	ForClause:  InitStmt ;.ForClause1 ; PostStmt 
	ForClause1: .    (112)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  reduce 112 (src line 876)

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Condition  goto 423
	Conversion  goto 123
	Expression  goto 424
	ForClause1  goto 422
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 390
	RangeClause:  RangeClause1 RANGE.Expression 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 425
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 391
	RangeClause1:  ExpressionList =.    (213)

	.  reduce 213 (src line 1398)


state 392
	RangeClause1:  IDENTIFIER_LIST COLAS.    (214)
	ShortVarDecl:  IDENTIFIER_LIST COLAS.ExpressionList 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  reduce 214 (src line 1403)

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 164
	ExpressionList  goto 395
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 393
	Expression:  Expression.Binary_op UnaryExpr 
	SendStmt:  Channel COMM Expression.    (238)

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 238 (src line 1526)

	Binary_op  goto 179

state 394
	Assignment:  ExpressionList ASSIGN_OP ExpressionList.    (8)
	ExpressionList:  ExpressionList., Expression 

	,  shift 227
	.  reduce 8 (src line 352)


state 395
	ExpressionList:  ExpressionList., Expression 
	ShortVarDecl:  IDENTIFIER_LIST COLAS ExpressionList.    (239)

	,  shift 227
	.  reduce 239 (src line 1532)


state 396
	ExprSwitchStmt:  SWITCH ExprSwitchStmt2 {.ExprSwitchStmt3 } 
	ExprSwitchStmt3: .    (97)

	.  reduce 97 (src line 796)

	ExprSwitchStmt3  goto 426

state 397
	ExprSwitchStmt:  SWITCH SimpleStmt ;.ExprSwitchStmt2 { ExprSwitchStmt3 } 
	TypeSwitchStmt:  SWITCH SimpleStmt ;.TypeSwitchGuard { TypeSwitchStmt2 } 
	ExprSwitchStmt2: .    (95)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_LIST  shift 430
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  reduce 95 (src line 786)

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	ExprSwitchStmt2  goto 427
	Expression  goto 429
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 353
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	TypeSwitchGuard  goto 428
	UnaryExpr  goto 113

state 398
	TypeSwitchStmt:  SWITCH TypeSwitchGuard {.TypeSwitchStmt2 } 
	TypeSwitchStmt2: .    (316)

	.  reduce 316 (src line 1906)

	TypeSwitchStmt2  goto 431

state 399
	PrimaryExpr2:  PrimaryExpr2.PrimaryExpr21 
	TypeSwitchGuard:  PrimaryExpr1 PrimaryExpr2.. ( TYPE ) 
	UnaryExpr:  PrimaryExpr1 PrimaryExpr2.    (318)

	(  shift 283
	[  shift 282
	.  shift 432
	.  reduce 318 (src line 1916)

	Call  goto 280
	Index  goto 277
	PrimaryExpr21  goto 275
	Selector  goto 276
	Slice  goto 278
	TypeAssertion  goto 279

state 400
	ShortVarDecl:  IDENTIFIER_LIST COLAS.ExpressionList 
	TypeSwitchGuard:  IDENTIFIER_LIST COLAS.PrimaryExpr1 PrimaryExpr2 . ( TYPE ) 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 164
	ExpressionList  goto 395
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 433
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 401
	TypeAssertion:  . ( Type.) 

	)  shift 434
	.  error


state 402
	Index:  [ Expression ].    (149)

	.  reduce 149 (src line 1072)


state 403
	Slice:  [ Slice1 :.Slice2 ] 
	Slice2: .    (251)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  reduce 251 (src line 1590)

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 436
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	Slice2  goto 435
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 404
	Call:  ( Call1 ).    (47)

	.  reduce 47 (src line 532)


state 405
	Call1:  ArgumentList Call11.    (49)

	.  reduce 49 (src line 543)


state 406
	Call11:  ,.    (51)

	.  reduce 51 (src line 553)


state 407
	Conversion:  Type ( Expression Conversion1 ).    (76)

	.  reduce 76 (src line 686)


state 408
	BuiltinArgs:  Type , ArgumentList.    (40)

	.  reduce 40 (src line 497)


state 409
	ElementList1:  ElementList1 ,.Element 
	LiteralValue11:  ,.    (172)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_FIELD  shift 303
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	{  shift 216
	!  shift 117
	.  reduce 172 (src line 1189)

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Element  goto 437
	ElementIndex  goto 302
	Expression  goto 299
	FieldName  goto 301
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Key  goto 298
	Literal  goto 125
	LiteralType  goto 141
	LiteralValue  goto 300
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113
	Value  goto 297

state 410
	LiteralValue1:  Element ElementList1 LiteralValue11.    (170)

	.  reduce 170 (src line 1179)


state 411
	Element:  Key : Value.    (84)

	.  reduce 84 (src line 727)


state 412
	Expression:  Expression.Binary_op UnaryExpr 
	Value:  Expression.    (326)

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 326 (src line 1950)

	Binary_op  goto 179

state 413
	MethodSpec1:  . NAME.    (182)

	.  reduce 182 (src line 1243)


state 414
	IfStmt:  IF Expression Block IfStmt2.    (129)

	.  reduce 129 (src line 968)


state 415
	IfStmt2:  ELSE.IfStmt21 

	IF  shift 258
	{  shift 92
	.  error

	Block  goto 440
	IfStmt  goto 439
	IfStmt21  goto 438

state 416
	Expression:  Expression.Binary_op UnaryExpr 
	IfStmt:  IF SimpleStmt ; Expression.Block IfStmt2 

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	{  shift 92
	.  error

	Binary_op  goto 179
	Block  goto 441

state 417
	SelectStmt:  SELECT { SelectStmt1 }.    (234)

	.  reduce 234 (src line 1504)


state 418
	SelectStmt1:  SelectStmt1 CommClause.    (236)

	.  reduce 236 (src line 1515)


state 419
	CommClause:  CommCase.: StatementList 

	:  shift 442
	.  error


state 420
	CommCase:  CASE.CommCase1 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_LIST  shift 450
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	Channel  goto 265
	ChannelType  goto 72
	ChannelType1  goto 79
	CommCase1  goto 443
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 448
	ExpressionList  goto 449
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	RecvExpr  goto 446
	RecvStmt  goto 445
	RecvStmt11  goto 447
	SendStmt  goto 444
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 421
	CommCase:  DEFAULT.    (57)

	.  reduce 57 (src line 585)


state 422
	ForClause:  InitStmt ; ForClause1.; PostStmt 

	;  shift 451
	.  error


state 423
	ForClause1:  Condition.    (113)

	.  reduce 113 (src line 881)


state 424
	Condition:  Expression.    (62)
	Expression:  Expression.Binary_op UnaryExpr 

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 62 (src line 612)

	Binary_op  goto 179

state 425
	Expression:  Expression.Binary_op UnaryExpr 
	RangeClause:  RangeClause1 RANGE Expression.    (212)

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 212 (src line 1392)

	Binary_op  goto 179

state 426
	ExprSwitchStmt:  SWITCH ExprSwitchStmt2 { ExprSwitchStmt3.} 
	ExprSwitchStmt3:  ExprSwitchStmt3.ExprCaseClause 

	CASE  shift 455
	DEFAULT  shift 456
	}  shift 452
	.  error

	ExprCaseClause  goto 453
	ExprSwitchCase  goto 454

state 427
	ExprSwitchStmt:  SWITCH SimpleStmt ; ExprSwitchStmt2.{ ExprSwitchStmt3 } 

	{  shift 457
	.  error


state 428
	TypeSwitchStmt:  SWITCH SimpleStmt ; TypeSwitchGuard.{ TypeSwitchStmt2 } 

	{  shift 458
	.  error


state 429
	ExprSwitchStmt2:  Expression.    (96)
	Expression:  Expression.Binary_op UnaryExpr 

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 96 (src line 791)

	Binary_op  goto 179

state 430
	TypeSwitchGuard:  IDENTIFIER_LIST.COLAS PrimaryExpr1 PrimaryExpr2 . ( TYPE ) 

	COLAS  shift 459
	.  error


state 431
	TypeSwitchStmt:  SWITCH TypeSwitchGuard { TypeSwitchStmt2.} 
	TypeSwitchStmt2:  TypeSwitchStmt2.TypeCaseClause 

	CASE  shift 463
	DEFAULT  shift 464
	}  shift 460
	.  error

	TypeCaseClause  goto 461
	TypeSwitchCase  goto 462

state 432
	Selector:  ..IDENTIFIER_SELECTOR 
	TypeAssertion:  ..( Type ) 
	TypeSwitchGuard:  PrimaryExpr1 PrimaryExpr2 ..( TYPE ) 

	IDENTIFIER_SELECTOR  shift 356
	(  shift 465
	.  error


state 433
	TypeSwitchGuard:  IDENTIFIER_LIST COLAS PrimaryExpr1.PrimaryExpr2 . ( TYPE ) 
	UnaryExpr:  PrimaryExpr1.PrimaryExpr2 
	PrimaryExpr2: .    (205)

	.  reduce 205 (src line 1360)

	PrimaryExpr2  goto 466

state 434
	TypeAssertion:  . ( Type ).    (290)

	.  reduce 290 (src line 1776)


state 435
	Slice:  [ Slice1 : Slice2.] 

	]  shift 467
	.  error


state 436
	Expression:  Expression.Binary_op UnaryExpr 
	Slice2:  Expression.    (252)

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 252 (src line 1595)

	Binary_op  goto 179

state 437
	ElementList1:  ElementList1 , Element.    (87)

	.  reduce 87 (src line 743)


state 438
	IfStmt2:  ELSE IfStmt21.    (132)

	.  reduce 132 (src line 983)


state 439
	IfStmt21:  IfStmt.    (133)

	.  reduce 133 (src line 988)


state 440
	IfStmt21:  Block.    (134)

	.  reduce 134 (src line 993)


state 441
	IfStmt:  IF SimpleStmt ; Expression Block.IfStmt2 
	IfStmt2: .    (131)

	ELSE  shift 415
	.  reduce 131 (src line 978)

	IfStmt2  goto 468

state 442
	CommClause:  CommCase :.StatementList 
	StatementList1: .    (276)

	.  reduce 276 (src line 1706)

	StatementList  goto 469
	StatementList1  goto 167

state 443
	CommCase:  CASE CommCase1.    (56)

	.  reduce 56 (src line 580)


state 444
	CommCase1:  SendStmt.    (58)

	.  reduce 58 (src line 590)


state 445
	CommCase1:  RecvStmt.    (59)

	.  reduce 59 (src line 595)


state 446
	RecvStmt:  RecvExpr.    (224)

	.  reduce 224 (src line 1454)


state 447
	RecvStmt:  RecvStmt11.RecvExpr 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 471
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	RecvExpr  goto 470
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 448
	Channel:  Expression.    (52)
	Expression:  Expression.Binary_op UnaryExpr 
	ExpressionList:  Expression.    (101)
	RecvExpr:  Expression.    (223)

	ANDAND  shift 181
	ANDNOT  shift 198
	COMM  reduce 52 (src line 558)
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	:  reduce 223 (src line 1448)
	.  reduce 101 (src line 816)

	Binary_op  goto 179

state 449
	ExpressionList:  ExpressionList., Expression 
	RecvStmt11:  ExpressionList.= 

	,  shift 227
	=  shift 472
	.  error


state 450
	RecvStmt11:  IDENTIFIER_LIST.COLAS 

	COLAS  shift 473
	.  error


state 451
	ForClause:  InitStmt ; ForClause1 ;.PostStmt 
	EmptyStmt: .    (89)

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_LIST  shift 267
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  reduce 89 (src line 754)

	ArrayType  goto 143
	Assignment  goto 250
	BasicLit  goto 131
	BuiltinCall  goto 124
	Channel  goto 265
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	EmptyStmt  goto 246
	Expression  goto 264
	ExpressionList  goto 266
	ExpressionStmt  goto 247
	FunctionLit  goto 133
	FunctionType  goto 68
	IncDecStmt  goto 249
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PostStmt  goto 474
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SendStmt  goto 248
	ShortVarDecl  goto 251
	SimpleStmt  goto 475
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 452
	ExprSwitchStmt:  SWITCH ExprSwitchStmt2 { ExprSwitchStmt3 }.    (93)

	.  reduce 93 (src line 776)


state 453
	ExprSwitchStmt3:  ExprSwitchStmt3 ExprCaseClause.    (98)

	.  reduce 98 (src line 801)


state 454
	ExprCaseClause:  ExprSwitchCase.: StatementList 

	:  shift 476
	.  error


state 455
	ExprSwitchCase:  CASE.ExpressionList 

	COMM  shift 121
	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 119
	[  shift 147
	+  shift 115
	-  shift 116
	^  shift 118
	&  shift 120
	!  shift 117
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	Expression  goto 164
	ExpressionList  goto 477
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 114
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135
	UnaryExpr  goto 113

state 456
	ExprSwitchCase:  DEFAULT.    (92)

	.  reduce 92 (src line 771)


state 457
	ExprSwitchStmt:  SWITCH SimpleStmt ; ExprSwitchStmt2 {.ExprSwitchStmt3 } 
	ExprSwitchStmt3: .    (97)

	.  reduce 97 (src line 796)

	ExprSwitchStmt3  goto 478

state 458
	TypeSwitchStmt:  SWITCH SimpleStmt ; TypeSwitchGuard {.TypeSwitchStmt2 } 
	TypeSwitchStmt2: .    (316)

	.  reduce 316 (src line 1906)

	TypeSwitchStmt2  goto 479

state 459
	TypeSwitchGuard:  IDENTIFIER_LIST COLAS.PrimaryExpr1 PrimaryExpr2 . ( TYPE ) 

	COMMCHAN  shift 81
	FLOAT_LIT  shift 137
	IDENTIFIER_BUILT_IN  shift 130
	IDENTIFIER_OPERAND  shift 126
	IDENTIFIER_TYPE  shift 64
	IMAGINARY_LIT  shift 138
	INT_LIT  shift 136
	RUNE_LIT  shift 139
	STRING_LIT  shift 140
	CHAN  shift 80
	FUNC  shift 142
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 128
	*  shift 75
	[  shift 147
	.  error

	ArrayType  goto 143
	BasicLit  goto 131
	BuiltinCall  goto 124
	ChannelType  goto 72
	ChannelType1  goto 79
	CompositeLit  goto 132
	Conversion  goto 123
	FunctionLit  goto 133
	FunctionType  goto 68
	InterfaceType  goto 69
	Literal  goto 125
	LiteralType  goto 141
	MapType  goto 146
	MethodExpr  goto 127
	Operand  goto 122
	PointerType  goto 67
	PrimaryExpr1  goto 480
	ReceiverType  goto 134
	SliceType  goto 145
	StructType  goto 144
	Type  goto 129
	TypeLit  goto 62
	TypeName  goto 135

state 460
	TypeSwitchStmt:  SWITCH TypeSwitchGuard { TypeSwitchStmt2 }.    (314)

	.  reduce 314 (src line 1896)


state 461
	TypeSwitchStmt2:  TypeSwitchStmt2 TypeCaseClause.    (317)

	.  reduce 317 (src line 1911)


state 462
	TypeCaseClause:  TypeSwitchCase.: StatementList 

	:  shift 481
	.  error


state 463
	TypeSwitchCase:  CASE.TypeList 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 483
	TypeList  goto 482
	TypeLit  goto 62
	TypeName  goto 61

state 464
	TypeSwitchCase:  DEFAULT.    (311)

	.  reduce 311 (src line 1881)


state 465
	TypeAssertion:  . (.Type ) 
	TypeSwitchGuard:  PrimaryExpr1 PrimaryExpr2 . (.TYPE ) 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	TYPE  shift 484
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 401
	TypeLit  goto 62
	TypeName  goto 61

state 466
	PrimaryExpr2:  PrimaryExpr2.PrimaryExpr21 
	TypeSwitchGuard:  IDENTIFIER_LIST COLAS PrimaryExpr1 PrimaryExpr2.. ( TYPE ) 
	UnaryExpr:  PrimaryExpr1 PrimaryExpr2.    (318)

	(  shift 283
	[  shift 282
	.  shift 485
	.  reduce 318 (src line 1916)

	Call  goto 280
	Index  goto 277
	PrimaryExpr21  goto 275
	Selector  goto 276
	Slice  goto 278
	TypeAssertion  goto 279

state 467
	Slice:  [ Slice1 : Slice2 ].    (248)

	.  reduce 248 (src line 1574)


state 468
	IfStmt:  IF SimpleStmt ; Expression Block IfStmt2.    (130)

	.  reduce 130 (src line 973)


state 469
	CommClause:  CommCase : StatementList.    (60)

	.  reduce 60 (src line 600)


state 470
	RecvStmt:  RecvStmt11 RecvExpr.    (225)

	.  reduce 225 (src line 1459)


state 471
	Expression:  Expression.Binary_op UnaryExpr 
	RecvExpr:  Expression.    (223)

	ANDAND  shift 181
	ANDNOT  shift 198
	EQ  shift 182
	GE  shift 187
	LE  shift 185
	LSH  shift 195
	NE  shift 183
	OROR  shift 180
	RSH  shift 196
	*  shift 192
	<  shift 184
	>  shift 186
	+  shift 188
	-  shift 189
	|  shift 190
	^  shift 191
	/  shift 193
	%  shift 194
	&  shift 197
	.  reduce 223 (src line 1448)

	Binary_op  goto 179

state 472
	RecvStmt11:  ExpressionList =.    (226)

	.  reduce 226 (src line 1464)


state 473
	RecvStmt11:  IDENTIFIER_LIST COLAS.    (227)

	.  reduce 227 (src line 1469)


state 474
	ForClause:  InitStmt ; ForClause1 ; PostStmt.    (111)

	.  reduce 111 (src line 870)


state 475
	PostStmt:  SimpleStmt.    (201)

	.  reduce 201 (src line 1340)


state 476
	ExprCaseClause:  ExprSwitchCase :.StatementList 
	StatementList1: .    (276)

	.  reduce 276 (src line 1706)

	StatementList  goto 486
	StatementList1  goto 167

state 477
	ExprSwitchCase:  CASE ExpressionList.    (91)
	ExpressionList:  ExpressionList., Expression 

	,  shift 227
	.  reduce 91 (src line 766)


state 478
	ExprSwitchStmt:  SWITCH SimpleStmt ; ExprSwitchStmt2 { ExprSwitchStmt3.} 
	ExprSwitchStmt3:  ExprSwitchStmt3.ExprCaseClause 

	CASE  shift 455
	DEFAULT  shift 456
	}  shift 487
	.  error

	ExprCaseClause  goto 453
	ExprSwitchCase  goto 454

state 479
	TypeSwitchStmt:  SWITCH SimpleStmt ; TypeSwitchGuard { TypeSwitchStmt2.} 
	TypeSwitchStmt2:  TypeSwitchStmt2.TypeCaseClause 

	CASE  shift 463
	DEFAULT  shift 464
	}  shift 488
	.  error

	TypeCaseClause  goto 461
	TypeSwitchCase  goto 462

state 480
	TypeSwitchGuard:  IDENTIFIER_LIST COLAS PrimaryExpr1.PrimaryExpr2 . ( TYPE ) 
	PrimaryExpr2: .    (205)

	.  reduce 205 (src line 1360)

	PrimaryExpr2  goto 489

state 481
	TypeCaseClause:  TypeSwitchCase :.StatementList 
	StatementList1: .    (276)

	.  reduce 276 (src line 1706)

	StatementList  goto 490
	StatementList1  goto 167

state 482
	TypeSwitchCase:  CASE TypeList.    (310)

	.  reduce 310 (src line 1876)


state 483
	TypeList:  Type.TypeList1 
	TypeList1: .    (298)

	.  reduce 298 (src line 1820)

	TypeList1  goto 491

state 484
	TypeSwitchGuard:  PrimaryExpr1 PrimaryExpr2 . ( TYPE.) 

	)  shift 492
	.  error


state 485
	Selector:  ..IDENTIFIER_SELECTOR 
	TypeAssertion:  ..( Type ) 
	TypeSwitchGuard:  IDENTIFIER_LIST COLAS PrimaryExpr1 PrimaryExpr2 ..( TYPE ) 

	IDENTIFIER_SELECTOR  shift 356
	(  shift 493
	.  error


state 486
	ExprCaseClause:  ExprSwitchCase : StatementList.    (90)

	.  reduce 90 (src line 760)


state 487
	ExprSwitchStmt:  SWITCH SimpleStmt ; ExprSwitchStmt2 { ExprSwitchStmt3 }.    (94)

	.  reduce 94 (src line 781)


state 488
	TypeSwitchStmt:  SWITCH SimpleStmt ; TypeSwitchGuard { TypeSwitchStmt2 }.    (315)

	.  reduce 315 (src line 1901)


state 489
	PrimaryExpr2:  PrimaryExpr2.PrimaryExpr21 
	TypeSwitchGuard:  IDENTIFIER_LIST COLAS PrimaryExpr1 PrimaryExpr2.. ( TYPE ) 

	(  shift 283
	[  shift 282
	.  shift 485
	.  error

	Call  goto 280
	Index  goto 277
	PrimaryExpr21  goto 275
	Selector  goto 276
	Slice  goto 278
	TypeAssertion  goto 279

state 490
	TypeCaseClause:  TypeSwitchCase : StatementList.    (291)

	.  reduce 291 (src line 1782)


state 491
	TypeList:  Type TypeList1.    (297)
	TypeList1:  TypeList1., Type 

	,  shift 494
	.  reduce 297 (src line 1814)


state 492
	TypeSwitchGuard:  PrimaryExpr1 PrimaryExpr2 . ( TYPE ).    (312)

	.  reduce 312 (src line 1886)


state 493
	TypeAssertion:  . (.Type ) 
	TypeSwitchGuard:  IDENTIFIER_LIST COLAS PrimaryExpr1 PrimaryExpr2 . (.TYPE ) 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	TYPE  shift 495
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 401
	TypeLit  goto 62
	TypeName  goto 61

state 494
	TypeList1:  TypeList1 ,.Type 

	COMMCHAN  shift 81
	IDENTIFIER_TYPE  shift 64
	CHAN  shift 80
	FUNC  shift 76
	INTERFACE  shift 77
	MAP  shift 78
	STRUCT  shift 74
	(  shift 63
	*  shift 75
	[  shift 73
	.  error

	ArrayType  goto 65
	ChannelType  goto 72
	ChannelType1  goto 79
	FunctionType  goto 68
	InterfaceType  goto 69
	MapType  goto 71
	PointerType  goto 67
	SliceType  goto 70
	StructType  goto 66
	Type  goto 496
	TypeLit  goto 62
	TypeName  goto 61

state 495
	TypeSwitchGuard:  IDENTIFIER_LIST COLAS PrimaryExpr1 PrimaryExpr2 . ( TYPE.) 

	)  shift 497
	.  error


state 496
	TypeList1:  TypeList1 , Type.    (299)

	.  reduce 299 (src line 1825)


state 497
	TypeSwitchGuard:  IDENTIFIER_LIST COLAS PrimaryExpr1 PrimaryExpr2 . ( TYPE ).    (313)

	.  reduce 313 (src line 1891)


85 terminals, 176 nonterminals
338 grammar rules, 498/20000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
225 working sets used
memory: parser 4141/30000
181 extra closures
1923 shift entries, 31 exceptions
398 goto entries
1339 entries saved by goto default
Optimizer space used: output 1648/30000
1648 table entries, 578 zero
maximum spread: 85, maximum offset: 494
