
state 0
	$accept: .Start $end 

	PACKAGE  shift 3
	.  error

	SourceFile  goto 2
	Start  goto 1

state 1
	$accept:  Start.$end 

	$end  accept
	.  error


state 2
	Start:  SourceFile.    (149)

	.  reduce 149 (src line 870)


state 3
	SourceFile:  PACKAGE.PackageName ; SourceFile1 SourceFile2 

	IDENTIFIER  shift 5
	.  error

	PackageName  goto 4

state 4
	SourceFile:  PACKAGE PackageName.; SourceFile1 SourceFile2 

	;  shift 6
	.  error


state 5
	PackageName:  IDENTIFIER.    (77)

	.  reduce 77 (src line 548)


state 6
	SourceFile:  PACKAGE PackageName ;.SourceFile1 SourceFile2 
	SourceFile1: .    (140)

	.  reduce 140 (src line 830)

	SourceFile1  goto 7

state 7
	SourceFile:  PACKAGE PackageName ; SourceFile1.SourceFile2 
	SourceFile1:  SourceFile1.IMPORT ImportSpec ; 
	SourceFile1:  SourceFile1.IMPORT ( ImportDecl11 ) ; 
	SourceFile2: .    (143)

	IMPORT  shift 9
	.  reduce 143 (src line 844)

	SourceFile2  goto 8

state 8
	SourceFile:  PACKAGE PackageName ; SourceFile1 SourceFile2.    (139)
	SourceFile2:  SourceFile2.Declaration ; 
	SourceFile2:  SourceFile2.FUNC FunctionName Function ; 
	SourceFile2:  SourceFile2.FUNC FunctionName Signature ; 
	SourceFile2:  SourceFile2.FUNC ( Receiver2 TYPE_NAME ) MethodName MethodDecl1 ; 
	SourceFile2:  SourceFile2.FUNC ( IDENTIFIER Receiver2 TYPE_NAME ) MethodName MethodDecl1 ; 

	CONST  shift 12
	FUNC  shift 11
	TYPE  shift 13
	VAR  shift 14
	.  reduce 139 (src line 824)

	Declaration  goto 10

state 9
	SourceFile1:  SourceFile1 IMPORT.ImportSpec ; 
	SourceFile1:  SourceFile1 IMPORT.( ImportDecl11 ) ; 

	IDENTIFIER  shift 5
	STRING_LIT  shift 17
	(  shift 16
	.  shift 18
	.  error

	ImportSpec  goto 15
	PackageName  goto 19

state 10
	SourceFile2:  SourceFile2 Declaration.; 

	;  shift 20
	.  error


state 11
	SourceFile2:  SourceFile2 FUNC.FunctionName Function ; 
	SourceFile2:  SourceFile2 FUNC.FunctionName Signature ; 
	SourceFile2:  SourceFile2 FUNC.( Receiver2 TYPE_NAME ) MethodName MethodDecl1 ; 
	SourceFile2:  SourceFile2 FUNC.( IDENTIFIER Receiver2 TYPE_NAME ) MethodName MethodDecl1 ; 

	IDENTIFIER  shift 23
	(  shift 22
	.  error

	FunctionName  goto 21

state 12
	Declaration:  CONST.ConstSpec 
	Declaration:  CONST.( ConstDecl11 ) 

	IDENTIFIER_LIST  shift 26
	(  shift 25
	.  error

	ConstSpec  goto 24

state 13
	Declaration:  TYPE.TypeSpec 
	Declaration:  TYPE.( TypeDecl11 ) 

	IDENTIFIER  shift 29
	(  shift 28
	.  error

	TypeSpec  goto 27

state 14
	Declaration:  VAR.VarSpec 
	Declaration:  VAR.( VarDecl11 ) 

	IDENTIFIER_LIST  shift 32
	(  shift 31
	.  error

	VarSpec  goto 30

state 15
	SourceFile1:  SourceFile1 IMPORT ImportSpec.; 

	;  shift 33
	.  error


state 16
	SourceFile1:  SourceFile1 IMPORT (.ImportDecl11 ) ; 
	ImportDecl11: .    (61)

	.  reduce 61 (src line 468)

	ImportDecl11  goto 34

state 17
	ImportSpec:  STRING_LIT.    (63)

	.  reduce 63 (src line 478)


state 18
	ImportSpec:  ..STRING_LIT 

	STRING_LIT  shift 35
	.  error


state 19
	ImportSpec:  PackageName.STRING_LIT 

	STRING_LIT  shift 36
	.  error


state 20
	SourceFile2:  SourceFile2 Declaration ;.    (144)

	.  reduce 144 (src line 849)


state 21
	SourceFile2:  SourceFile2 FUNC FunctionName.Function ; 
	SourceFile2:  SourceFile2 FUNC FunctionName.Signature ; 

	(  shift 40
	.  error

	Function  goto 37
	Parameters  goto 39
	Signature  goto 38

state 22
	SourceFile2:  SourceFile2 FUNC (.Receiver2 TYPE_NAME ) MethodName MethodDecl1 ; 
	SourceFile2:  SourceFile2 FUNC (.IDENTIFIER Receiver2 TYPE_NAME ) MethodName MethodDecl1 ; 
	Receiver2: .    (115)

	IDENTIFIER  shift 42
	*  shift 43
	.  reduce 115 (src line 712)

	Receiver2  goto 41

state 23
	FunctionName:  IDENTIFIER.    (54)

	.  reduce 54 (src line 436)


state 24
	Declaration:  CONST ConstSpec.    (11)

	.  reduce 11 (src line 242)


state 25
	Declaration:  CONST (.ConstDecl11 ) 
	ConstDecl11: .    (6)

	.  reduce 6 (src line 218)

	ConstDecl11  goto 44

state 26
	ConstSpec:  IDENTIFIER_LIST.    (8)
	ConstSpec:  IDENTIFIER_LIST.= ExpressionList 
	ConstSpec:  IDENTIFIER_LIST.Type = ExpressionList 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	=  shift 45
	*  shift 54
	.  reduce 8 (src line 228)

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 46
	TypeLit  goto 48
	TypeName  goto 47

state 27
	Declaration:  TYPE TypeSpec.    (13)

	.  reduce 13 (src line 251)


state 28
	Declaration:  TYPE (.TypeDecl11 ) 
	TypeDecl11: .    (187)

	.  reduce 187 (src line 1036)

	TypeDecl11  goto 65

state 29
	TypeSpec:  IDENTIFIER.Type 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 66
	TypeLit  goto 48
	TypeName  goto 47

state 30
	Declaration:  VAR VarSpec.    (15)

	.  reduce 15 (src line 259)


state 31
	Declaration:  VAR (.VarDecl11 ) 
	VarDecl11: .    (219)

	.  reduce 219 (src line 1182)

	VarDecl11  goto 67

state 32
	VarSpec:  IDENTIFIER_LIST.Type 
	VarSpec:  IDENTIFIER_LIST.Type = ExpressionList 
	VarSpec:  IDENTIFIER_LIST.= ExpressionList 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	=  shift 69
	*  shift 54
	.  error

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 68
	TypeLit  goto 48
	TypeName  goto 47

state 33
	SourceFile1:  SourceFile1 IMPORT ImportSpec ;.    (141)

	.  reduce 141 (src line 835)


state 34
	ImportDecl11:  ImportDecl11.ImportSpec ; 
	SourceFile1:  SourceFile1 IMPORT ( ImportDecl11.) ; 

	IDENTIFIER  shift 5
	STRING_LIT  shift 17
	)  shift 71
	.  shift 18
	.  error

	ImportSpec  goto 70
	PackageName  goto 19

state 35
	ImportSpec:  . STRING_LIT.    (64)

	.  reduce 64 (src line 483)


state 36
	ImportSpec:  PackageName STRING_LIT.    (65)

	.  reduce 65 (src line 487)


state 37
	SourceFile2:  SourceFile2 FUNC FunctionName Function.; 

	;  shift 72
	.  error


state 38
	Function:  Signature.Block 
	SourceFile2:  SourceFile2 FUNC FunctionName Signature.; 

	{  shift 75
	;  shift 74
	.  error

	Block  goto 73

state 39
	Signature:  Parameters.    (125)
	Signature:  Parameters.Parameters 
	Signature:  Parameters.TypeName 
	Signature:  Parameters.TypeLit 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 40
	[  shift 62
	*  shift 54
	.  reduce 125 (src line 760)

	ArrayType  goto 52
	MapType  goto 58
	Parameters  goto 76
	SliceType  goto 57
	StructType  goto 53
	TypeLit  goto 78
	TypeName  goto 77

state 40
	Parameters:  (.) 
	Parameters:  (.ParameterDecl ParameterList1 OCOMMA_RPAREN 
	ParameterDecl2: .    (80)

	DDD  shift 83
	IDENTIFIER_LIST  shift 82
	)  shift 79
	.  reduce 80 (src line 564)

	ParameterDecl  goto 80
	ParameterDecl2  goto 81

state 41
	SourceFile2:  SourceFile2 FUNC ( Receiver2.TYPE_NAME ) MethodName MethodDecl1 ; 

	TYPE_NAME  shift 84
	.  error


state 42
	SourceFile2:  SourceFile2 FUNC ( IDENTIFIER.Receiver2 TYPE_NAME ) MethodName MethodDecl1 ; 
	Receiver2: .    (115)

	*  shift 43
	.  reduce 115 (src line 712)

	Receiver2  goto 85

state 43
	Receiver2:  *.    (116)

	.  reduce 116 (src line 717)


state 44
	ConstDecl11:  ConstDecl11.ConstSpec ; 
	Declaration:  CONST ( ConstDecl11.) 

	IDENTIFIER_LIST  shift 26
	)  shift 87
	.  error

	ConstSpec  goto 86

state 45
	ConstSpec:  IDENTIFIER_LIST =.ExpressionList 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 89
	ExpressionList  goto 88
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 46
	ConstSpec:  IDENTIFIER_LIST Type.= ExpressionList 

	=  shift 116
	.  error


state 47
	Type:  TypeName.    (183)

	.  reduce 183 (src line 1018)


state 48
	Type:  TypeLit.    (184)

	.  reduce 184 (src line 1023)


state 49
	Type:  (.TypeName ) 
	Type:  (.TypeLit ) 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	TypeLit  goto 118
	TypeName  goto 117

state 50
	TypeName:  TYPE_NAME.    (201)

	.  reduce 201 (src line 1098)


state 51
	TypeName:  PACK_NAME.TYPE_NAME 

	TYPE_NAME  shift 119
	.  error


state 52
	TypeLit:  ArrayType.    (191)

	.  reduce 191 (src line 1056)


state 53
	TypeLit:  StructType.    (192)

	.  reduce 192 (src line 1061)


state 54
	TypeLit:  *.Type 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 120
	TypeLit  goto 48
	TypeName  goto 47

state 55
	TypeLit:  FUNC.Signature 

	(  shift 40
	.  error

	Parameters  goto 39
	Signature  goto 121

state 56
	TypeLit:  INTERFACE.{ InterfaceType1 } 

	{  shift 122
	.  error


state 57
	TypeLit:  SliceType.    (196)

	.  reduce 196 (src line 1077)


state 58
	TypeLit:  MapType.    (197)

	.  reduce 197 (src line 1081)


state 59
	TypeLit:  CHAN.ElementType 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	ElementType  goto 123
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 124
	TypeLit  goto 48
	TypeName  goto 47

state 60
	TypeLit:  CHANCOMM.ElementType 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	ElementType  goto 125
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 124
	TypeLit  goto 48
	TypeName  goto 47

state 61
	TypeLit:  COMMCHAN.ElementType 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	ElementType  goto 126
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 124
	TypeLit  goto 48
	TypeName  goto 47

state 62
	ArrayType:  [.Expression ] ElementType 
	SliceType:  [.] ElementType 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	]  shift 128
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 127
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 63
	StructType:  STRUCT.{ StructType1 } 

	{  shift 129
	.  error


state 64
	MapType:  MAP.[ Type ] ElementType 

	[  shift 130
	.  error


state 65
	Declaration:  TYPE ( TypeDecl11.) 
	TypeDecl11:  TypeDecl11.TypeSpec ; 

	IDENTIFIER  shift 29
	)  shift 131
	.  error

	TypeSpec  goto 132

state 66
	TypeSpec:  IDENTIFIER Type.    (203)

	.  reduce 203 (src line 1108)


state 67
	Declaration:  VAR ( VarDecl11.) 
	VarDecl11:  VarDecl11.VarSpec ; 

	IDENTIFIER_LIST  shift 32
	)  shift 133
	.  error

	VarSpec  goto 134

state 68
	VarSpec:  IDENTIFIER_LIST Type.    (221)
	VarSpec:  IDENTIFIER_LIST Type.= ExpressionList 

	=  shift 135
	.  reduce 221 (src line 1192)


state 69
	VarSpec:  IDENTIFIER_LIST =.ExpressionList 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 89
	ExpressionList  goto 136
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 70
	ImportDecl11:  ImportDecl11 ImportSpec.; 

	;  shift 137
	.  error


state 71
	SourceFile1:  SourceFile1 IMPORT ( ImportDecl11 ).; 

	;  shift 138
	.  error


state 72
	SourceFile2:  SourceFile2 FUNC FunctionName Function ;.    (145)

	.  reduce 145 (src line 853)


state 73
	Function:  Signature Block.    (53)

	.  reduce 53 (src line 430)


state 74
	SourceFile2:  SourceFile2 FUNC FunctionName Signature ;.    (146)

	.  reduce 146 (src line 857)


state 75
	Block:  {.StatementList } 
	StatementList1: .    (177)

	.  reduce 177 (src line 988)

	StatementList  goto 139
	StatementList1  goto 140

state 76
	Signature:  Parameters Parameters.    (126)

	.  reduce 126 (src line 765)


state 77
	Signature:  Parameters TypeName.    (127)

	.  reduce 127 (src line 769)


state 78
	Signature:  Parameters TypeLit.    (128)

	.  reduce 128 (src line 773)


state 79
	Parameters:  ( ).    (84)

	.  reduce 84 (src line 584)


state 80
	Parameters:  ( ParameterDecl.ParameterList1 OCOMMA_RPAREN 
	ParameterList1: .    (82)

	.  reduce 82 (src line 574)

	ParameterList1  goto 141

state 81
	ParameterDecl:  ParameterDecl2.Type 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 142
	TypeLit  goto 48
	TypeName  goto 47

state 82
	ParameterDecl:  IDENTIFIER_LIST.ParameterDecl2 Type 
	ParameterDecl2: .    (80)

	DDD  shift 83
	.  reduce 80 (src line 564)

	ParameterDecl2  goto 143

state 83
	ParameterDecl2:  DDD.    (81)

	.  reduce 81 (src line 569)


state 84
	SourceFile2:  SourceFile2 FUNC ( Receiver2 TYPE_NAME.) MethodName MethodDecl1 ; 

	)  shift 144
	.  error


state 85
	SourceFile2:  SourceFile2 FUNC ( IDENTIFIER Receiver2.TYPE_NAME ) MethodName MethodDecl1 ; 

	TYPE_NAME  shift 145
	.  error


state 86
	ConstDecl11:  ConstDecl11 ConstSpec.; 

	;  shift 146
	.  error


state 87
	Declaration:  CONST ( ConstDecl11 ).    (12)

	.  reduce 12 (src line 247)


state 88
	ConstSpec:  IDENTIFIER_LIST = ExpressionList.    (9)

	.  reduce 9 (src line 233)


state 89
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	ExpressionList:  Expression.ExpressionList1 
	ExpressionList1: .    (48)

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 48 (src line 406)

	ExpressionList1  goto 166

state 90
	Expression:  UnaryExpr.    (27)

	.  reduce 27 (src line 318)


state 91
	PrimaryExpr:  PrimaryExpr.. IDENTIFIER 
	PrimaryExpr:  PrimaryExpr.[ Expression ] 
	PrimaryExpr:  PrimaryExpr.[ : Slice2 ] 
	PrimaryExpr:  PrimaryExpr.[ Expression : Slice2 ] 
	PrimaryExpr:  PrimaryExpr.. ( Type ) 
	PrimaryExpr:  PrimaryExpr.( ) 
	PrimaryExpr:  PrimaryExpr.( ArgumentList OCOMMA_RPAREN 
	UnaryExpr:  PrimaryExpr.    (209)

	(  shift 169
	[  shift 168
	.  shift 167
	.  reduce 209 (src line 1138)


state 92
	UnaryExpr:  +.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 170

state 93
	UnaryExpr:  -.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 171

state 94
	UnaryExpr:  !.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 172

state 95
	UnaryExpr:  ^.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 173

state 96
	TypeLit:  *.Type 
	UnaryExpr:  *.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 174
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 175

state 97
	UnaryExpr:  &.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 176

state 98
	UnaryExpr:  COMM.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 177

state 99
	PrimaryExpr:  INT_LIT.    (86)

	.  reduce 86 (src line 594)


state 100
	PrimaryExpr:  FLOAT_LIT.    (87)

	.  reduce 87 (src line 599)


state 101
	PrimaryExpr:  IMAGINARY_LIT.    (88)

	.  reduce 88 (src line 603)


state 102
	PrimaryExpr:  RUNE_LIT.    (89)

	.  reduce 89 (src line 607)


state 103
	PrimaryExpr:  STRING_LIT.    (90)

	.  reduce 90 (src line 611)


state 104
	PrimaryExpr:  StructType.LiteralValue 
	TypeLit:  StructType.    (192)

	{  shift 179
	.  reduce 192 (src line 1061)

	LiteralValue  goto 178

state 105
	PrimaryExpr:  ArrayType.LiteralValue 
	TypeLit:  ArrayType.    (191)

	{  shift 179
	.  reduce 191 (src line 1056)

	LiteralValue  goto 180

state 106
	ArrayType:  [.Expression ] ElementType 
	PrimaryExpr:  [.DDD ] ElementType LiteralValue 
	SliceType:  [.] ElementType 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	DDD  shift 181
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	]  shift 128
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 127
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 107
	PrimaryExpr:  SliceType.LiteralValue 
	TypeLit:  SliceType.    (196)

	{  shift 179
	.  reduce 196 (src line 1077)

	LiteralValue  goto 182

state 108
	PrimaryExpr:  MapType.LiteralValue 
	TypeLit:  MapType.    (197)

	{  shift 179
	.  reduce 197 (src line 1081)

	LiteralValue  goto 183

state 109
	PrimaryExpr:  TypeName.LiteralValue 
	PrimaryExpr:  TypeName.. MethodName 
	Type:  TypeName.    (183)

	{  shift 179
	.  shift 185
	.  reduce 183 (src line 1018)

	LiteralValue  goto 184

state 110
	PrimaryExpr:  FUNC.Function 
	TypeLit:  FUNC.Signature 

	(  shift 40
	.  error

	Function  goto 186
	Parameters  goto 39
	Signature  goto 187

state 111
	PrimaryExpr:  IDENTIFIER.    (98)

	.  reduce 98 (src line 643)


state 112
	PrimaryExpr:  PACK_NAME.IDENTIFIER 
	TypeName:  PACK_NAME.TYPE_NAME 

	IDENTIFIER  shift 188
	TYPE_NAME  shift 119
	.  error


state 113
	PrimaryExpr:  (.TypeName RPAREN_DOT_METHOD_NAME 
	PrimaryExpr:  (.* TypeName RPAREN_DOT_METHOD_NAME 
	PrimaryExpr:  (.Expression ) 
	Type:  (.TypeName ) 
	Type:  (.TypeLit ) 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 190
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 191
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 192
	TypeName  goto 189
	UnaryExpr  goto 90

state 114
	PrimaryExpr:  Type.( Expression OCOMMA_RPAREN 

	(  shift 193
	.  error


state 115
	PrimaryExpr:  BUILT_IN_NAME.( Type OCOMMA_RPAREN 
	PrimaryExpr:  BUILT_IN_NAME.( Type , ArgumentList OCOMMA_RPAREN 
	PrimaryExpr:  BUILT_IN_NAME.( ArgumentList OCOMMA_RPAREN 

	(  shift 194
	.  error


state 116
	ConstSpec:  IDENTIFIER_LIST Type =.ExpressionList 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 89
	ExpressionList  goto 195
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 117
	Type:  ( TypeName.) 

	)  shift 196
	.  error


state 118
	Type:  ( TypeLit.) 

	)  shift 197
	.  error


state 119
	TypeName:  PACK_NAME TYPE_NAME.    (202)

	.  reduce 202 (src line 1103)


state 120
	TypeLit:  * Type.    (193)

	.  reduce 193 (src line 1065)


state 121
	TypeLit:  FUNC Signature.    (194)

	.  reduce 194 (src line 1069)


state 122
	TypeLit:  INTERFACE {.InterfaceType1 } 
	InterfaceType1: .    (66)

	.  reduce 66 (src line 492)

	InterfaceType1  goto 198

state 123
	TypeLit:  CHAN ElementType.    (198)

	.  reduce 198 (src line 1085)


state 124
	ElementType:  Type.    (21)

	.  reduce 21 (src line 288)


state 125
	TypeLit:  CHANCOMM ElementType.    (199)

	.  reduce 199 (src line 1089)


state 126
	TypeLit:  COMMCHAN ElementType.    (200)

	.  reduce 200 (src line 1093)


state 127
	ArrayType:  [ Expression.] ElementType 
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	]  shift 199
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  error


state 128
	SliceType:  [ ].ElementType 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	ElementType  goto 200
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 124
	TypeLit  goto 48
	TypeName  goto 47

state 129
	StructType:  STRUCT {.StructType1 } 
	StructType1: .    (180)

	.  reduce 180 (src line 1004)

	StructType1  goto 201

state 130
	MapType:  MAP [.Type ] ElementType 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 202
	TypeLit  goto 48
	TypeName  goto 47

state 131
	Declaration:  TYPE ( TypeDecl11 ).    (14)

	.  reduce 14 (src line 255)


state 132
	TypeDecl11:  TypeDecl11 TypeSpec.; 

	;  shift 203
	.  error


state 133
	Declaration:  VAR ( VarDecl11 ).    (16)

	.  reduce 16 (src line 263)


state 134
	VarDecl11:  VarDecl11 VarSpec.; 

	;  shift 204
	.  error


state 135
	VarSpec:  IDENTIFIER_LIST Type =.ExpressionList 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 89
	ExpressionList  goto 205
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 136
	VarSpec:  IDENTIFIER_LIST = ExpressionList.    (223)

	.  reduce 223 (src line 1201)


state 137
	ImportDecl11:  ImportDecl11 ImportSpec ;.    (62)

	.  reduce 62 (src line 473)


state 138
	SourceFile1:  SourceFile1 IMPORT ( ImportDecl11 ) ;.    (142)

	.  reduce 142 (src line 839)


state 139
	Block:  { StatementList.} 

	}  shift 206
	.  error


state 140
	StatementList:  StatementList1.    (176)
	StatementList1:  StatementList1.Statement ; 
	SimpleStmt: .    (129)

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 223
	IDLIST_COLAS  shift 227
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	BREAK  shift 213
	CHAN  shift 59
	CONST  shift 12
	CONTINUE  shift 214
	DEFER  shift 222
	FALLTHROUGH  shift 216
	FOR  shift 221
	FUNC  shift 110
	GO  shift 211
	GOTO  shift 215
	IF  shift 228
	INTERFACE  shift 56
	MAP  shift 64
	RETURN  shift 212
	SELECT  shift 220
	STRUCT  shift 63
	SWITCH  shift 219
	TYPE  shift 13
	VAR  shift 14
	(  shift 113
	[  shift 106
	{  shift 75
	;  reduce 129 (src line 778)
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  reduce 176 (src line 982)

	ArrayType  goto 105
	Block  goto 217
	Declaration  goto 208
	Expression  goto 224
	ExpressionList  goto 226
	IfStmt  goto 218
	Label  goto 209
	MapType  goto 108
	PrimaryExpr  goto 91
	SendStmt  goto 225
	SimpleStmt  goto 210
	SliceType  goto 107
	Statement  goto 207
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 141
	ParameterList1:  ParameterList1., ParameterDecl 
	Parameters:  ( ParameterDecl ParameterList1.OCOMMA_RPAREN 

	OCOMMA_RPAREN  shift 230
	,  shift 229
	.  error


state 142
	ParameterDecl:  ParameterDecl2 Type.    (78)

	.  reduce 78 (src line 554)


state 143
	ParameterDecl:  IDENTIFIER_LIST ParameterDecl2.Type 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 231
	TypeLit  goto 48
	TypeName  goto 47

state 144
	SourceFile2:  SourceFile2 FUNC ( Receiver2 TYPE_NAME ).MethodName MethodDecl1 ; 

	IDENTIFIER  shift 233
	.  error

	MethodName  goto 232

state 145
	SourceFile2:  SourceFile2 FUNC ( IDENTIFIER Receiver2 TYPE_NAME.) MethodName MethodDecl1 ; 

	)  shift 234
	.  error


state 146
	ConstDecl11:  ConstDecl11 ConstSpec ;.    (7)

	.  reduce 7 (src line 223)


state 147
	Expression:  Expression OROR.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 235

state 148
	Expression:  Expression ANDAND.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 236

state 149
	Expression:  Expression EQ.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 237

state 150
	Expression:  Expression NE.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 238

state 151
	Expression:  Expression <.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 239

state 152
	Expression:  Expression LE.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 240

state 153
	Expression:  Expression >.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 241

state 154
	Expression:  Expression GE.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 242

state 155
	Expression:  Expression +.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 243

state 156
	Expression:  Expression -.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 244

state 157
	Expression:  Expression |.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 245

state 158
	Expression:  Expression ^.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 246

state 159
	Expression:  Expression *.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 247

state 160
	Expression:  Expression /.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 248

state 161
	Expression:  Expression %.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 249

state 162
	Expression:  Expression LSH.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 250

state 163
	Expression:  Expression RSH.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 251

state 164
	Expression:  Expression &.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 252

state 165
	Expression:  Expression ANDNOT.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 253

state 166
	ExpressionList:  Expression ExpressionList1.    (47)
	ExpressionList1:  ExpressionList1., Expression 

	,  shift 254
	.  reduce 47 (src line 400)


state 167
	PrimaryExpr:  PrimaryExpr ..IDENTIFIER 
	PrimaryExpr:  PrimaryExpr ..( Type ) 

	IDENTIFIER  shift 255
	(  shift 256
	.  error


state 168
	PrimaryExpr:  PrimaryExpr [.Expression ] 
	PrimaryExpr:  PrimaryExpr [.: Slice2 ] 
	PrimaryExpr:  PrimaryExpr [.Expression : Slice2 ] 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	:  shift 258
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 257
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 169
	PrimaryExpr:  PrimaryExpr (.) 
	PrimaryExpr:  PrimaryExpr (.ArgumentList OCOMMA_RPAREN 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	)  shift 259
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArgumentList  goto 260
	ArrayType  goto 105
	Expression  goto 89
	ExpressionList  goto 261
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 170
	UnaryExpr:  + UnaryExpr.    (210)

	.  reduce 210 (src line 1143)


state 171
	UnaryExpr:  - UnaryExpr.    (211)

	.  reduce 211 (src line 1147)


state 172
	UnaryExpr:  ! UnaryExpr.    (212)

	.  reduce 212 (src line 1151)


state 173
	UnaryExpr:  ^ UnaryExpr.    (213)

	.  reduce 213 (src line 1155)


state 174
	PrimaryExpr:  Type.( Expression OCOMMA_RPAREN 
	TypeLit:  * Type.    (193)

	(  shift 193
	.  reduce 193 (src line 1065)


state 175
	UnaryExpr:  * UnaryExpr.    (214)

	.  reduce 214 (src line 1159)


state 176
	UnaryExpr:  & UnaryExpr.    (215)

	.  reduce 215 (src line 1163)


state 177
	UnaryExpr:  COMM UnaryExpr.    (216)

	.  reduce 216 (src line 1167)


state 178
	PrimaryExpr:  StructType LiteralValue.    (91)

	.  reduce 91 (src line 615)


state 179
	LiteralValue:  {.} 
	LiteralValue:  {.Element ElementList1 } 
	LiteralValue:  {.Element ElementList1 , } 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	{  shift 179
	}  shift 262
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Element  goto 263
	Expression  goto 265
	LiteralValue  goto 266
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90
	Value  goto 264

state 180
	PrimaryExpr:  ArrayType LiteralValue.    (92)

	.  reduce 92 (src line 619)


state 181
	PrimaryExpr:  [ DDD.] ElementType LiteralValue 

	]  shift 267
	.  error


state 182
	PrimaryExpr:  SliceType LiteralValue.    (94)

	.  reduce 94 (src line 627)


state 183
	PrimaryExpr:  MapType LiteralValue.    (95)

	.  reduce 95 (src line 631)


state 184
	PrimaryExpr:  TypeName LiteralValue.    (96)

	.  reduce 96 (src line 635)


state 185
	PrimaryExpr:  TypeName ..MethodName 

	IDENTIFIER  shift 233
	.  error

	MethodName  goto 268

state 186
	PrimaryExpr:  FUNC Function.    (97)

	.  reduce 97 (src line 639)


state 187
	Function:  Signature.Block 
	TypeLit:  FUNC Signature.    (194)

	{  shift 75
	.  reduce 194 (src line 1069)

	Block  goto 73

state 188
	PrimaryExpr:  PACK_NAME IDENTIFIER.    (99)

	.  reduce 99 (src line 647)


state 189
	PrimaryExpr:  TypeName.LiteralValue 
	PrimaryExpr:  TypeName.. MethodName 
	PrimaryExpr:  ( TypeName.RPAREN_DOT_METHOD_NAME 
	Type:  TypeName.    (183)
	Type:  ( TypeName.) 

	RPAREN_DOT_METHOD_NAME  shift 269
	{  shift 179
	)  shift 196
	.  shift 185
	.  reduce 183 (src line 1018)

	LiteralValue  goto 184

state 190
	PrimaryExpr:  ( *.TypeName RPAREN_DOT_METHOD_NAME 
	TypeLit:  *.Type 
	UnaryExpr:  *.UnaryExpr 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 174
	TypeLit  goto 48
	TypeName  goto 270
	UnaryExpr  goto 175

state 191
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	PrimaryExpr:  ( Expression.) 

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	)  shift 271
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  error


state 192
	Type:  TypeLit.    (184)
	Type:  ( TypeLit.) 

	)  shift 197
	.  reduce 184 (src line 1023)


state 193
	PrimaryExpr:  Type (.Expression OCOMMA_RPAREN 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 272
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 194
	PrimaryExpr:  BUILT_IN_NAME (.Type OCOMMA_RPAREN 
	PrimaryExpr:  BUILT_IN_NAME (.Type , ArgumentList OCOMMA_RPAREN 
	PrimaryExpr:  BUILT_IN_NAME (.ArgumentList OCOMMA_RPAREN 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArgumentList  goto 274
	ArrayType  goto 105
	Expression  goto 89
	ExpressionList  goto 261
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 273
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 195
	ConstSpec:  IDENTIFIER_LIST Type = ExpressionList.    (10)

	.  reduce 10 (src line 237)


state 196
	Type:  ( TypeName ).    (185)

	.  reduce 185 (src line 1027)


state 197
	Type:  ( TypeLit ).    (186)

	.  reduce 186 (src line 1031)


state 198
	InterfaceType1:  InterfaceType1.MethodName Signature ; 
	InterfaceType1:  InterfaceType1.TypeName ; 
	TypeLit:  INTERFACE { InterfaceType1.} 

	IDENTIFIER  shift 233
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	}  shift 277
	.  error

	MethodName  goto 275
	TypeName  goto 276

state 199
	ArrayType:  [ Expression ].ElementType 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	ElementType  goto 278
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 124
	TypeLit  goto 48
	TypeName  goto 47

state 200
	SliceType:  [ ] ElementType.    (138)

	.  reduce 138 (src line 818)


state 201
	StructType:  STRUCT { StructType1.} 
	StructType1:  StructType1.FieldDecl1 ; 
	StructType1:  StructType1.FieldDecl1 STRING_LIT ; 

	IDENTIFIER_LIST  shift 281
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	}  shift 279
	*  shift 283
	.  error

	FieldDecl1  goto 280
	TypeName  goto 282

state 202
	MapType:  MAP [ Type.] ElementType 

	]  shift 284
	.  error


state 203
	TypeDecl11:  TypeDecl11 TypeSpec ;.    (188)

	.  reduce 188 (src line 1041)


state 204
	VarDecl11:  VarDecl11 VarSpec ;.    (220)

	.  reduce 220 (src line 1187)


state 205
	VarSpec:  IDENTIFIER_LIST Type = ExpressionList.    (222)

	.  reduce 222 (src line 1197)


state 206
	Block:  { StatementList }.    (4)

	.  reduce 4 (src line 206)


state 207
	StatementList1:  StatementList1 Statement.; 

	;  shift 285
	.  error


state 208
	Statement:  Declaration.    (150)

	.  reduce 150 (src line 876)


state 209
	Statement:  Label.: Statement 

	:  shift 286
	.  error


state 210
	Statement:  SimpleStmt.    (152)

	.  reduce 152 (src line 885)


state 211
	Statement:  GO.Expression 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 287
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 212
	Statement:  RETURN.    (154)
	Statement:  RETURN.ExpressionList 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  reduce 154 (src line 893)

	ArrayType  goto 105
	Expression  goto 89
	ExpressionList  goto 288
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 213
	Statement:  BREAK.    (156)
	Statement:  BREAK.Label 

	IDENTIFIER  shift 290
	.  reduce 156 (src line 901)

	Label  goto 289

state 214
	Statement:  CONTINUE.    (158)
	Statement:  CONTINUE.Label 

	IDENTIFIER  shift 290
	.  reduce 158 (src line 909)

	Label  goto 291

state 215
	Statement:  GOTO.Label 

	IDENTIFIER  shift 290
	.  error

	Label  goto 292

state 216
	Statement:  FALLTHROUGH.    (161)

	.  reduce 161 (src line 921)


state 217
	Statement:  Block.    (162)

	.  reduce 162 (src line 925)


state 218
	Statement:  IfStmt.    (163)

	.  reduce 163 (src line 929)


state 219
	Statement:  SWITCH.ExprSwitchStmt2 { ExprSwitchStmt3 } 
	Statement:  SWITCH.SimpleStmt ; ExprSwitchStmt2 { ExprSwitchStmt3 } 
	Statement:  SWITCH.TypeSwitchGuard { TypeSwitchStmt2 } 
	Statement:  SWITCH.SimpleStmt ; TypeSwitchGuard { TypeSwitchStmt2 } 
	ExprSwitchStmt2: .    (22)
	SimpleStmt: .    (129)

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IDLIST_COLAS  shift 297
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	;  reduce 129 (src line 778)
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  reduce 22 (src line 294)

	ArrayType  goto 105
	ExprSwitchStmt2  goto 293
	Expression  goto 296
	ExpressionList  goto 226
	MapType  goto 108
	PrimaryExpr  goto 298
	SendStmt  goto 225
	SimpleStmt  goto 294
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	TypeSwitchGuard  goto 295
	UnaryExpr  goto 90

state 220
	Statement:  SELECT.{ SelectStmt1 } 

	{  shift 299
	.  error


state 221
	Statement:  FOR.Block 
	Statement:  FOR.Condition Block 
	Statement:  FOR.SimpleStmt ; ; SimpleStmt Block 
	Statement:  FOR.SimpleStmt ; Condition ; SimpleStmt Block 
	Statement:  FOR.ExpressionList = RANGE Expression Block 
	Statement:  FOR.IDLIST_COLAS RANGE Expression Block 
	SimpleStmt: .    (129)

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IDLIST_COLAS  shift 304
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	{  shift 75
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  reduce 129 (src line 778)

	ArrayType  goto 105
	Block  goto 300
	Condition  goto 301
	Expression  goto 305
	ExpressionList  goto 303
	MapType  goto 108
	PrimaryExpr  goto 91
	SendStmt  goto 225
	SimpleStmt  goto 302
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 222
	Statement:  DEFER.Expression 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 306
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 223
	Label:  IDENTIFIER.    (69)
	PrimaryExpr:  IDENTIFIER.    (98)

	:  reduce 69 (src line 506)
	.  reduce 98 (src line 643)


state 224
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	ExpressionList:  Expression.ExpressionList1 
	SendStmt:  Expression.COMM Expression 
	SimpleStmt:  Expression.    (130)
	SimpleStmt:  Expression.INC 
	SimpleStmt:  Expression.DEC 
	ExpressionList1: .    (48)

	ANDAND  shift 148
	ANDNOT  shift 165
	COMM  shift 307
	DEC  shift 309
	EQ  shift 149
	GE  shift 154
	INC  shift 308
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	{  reduce 130 (src line 783)
	;  reduce 130 (src line 783)
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 48 (src line 406)

	ExpressionList1  goto 166

state 225
	SimpleStmt:  SendStmt.    (131)

	.  reduce 131 (src line 787)


state 226
	SimpleStmt:  ExpressionList.ASSIGN_OP ExpressionList 

	ASSIGN_OP  shift 310
	.  error


state 227
	SimpleStmt:  IDLIST_COLAS.ExpressionList 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 89
	ExpressionList  goto 311
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 228
	IfStmt:  IF.Expression Block 
	IfStmt:  IF.SimpleStmt ; Expression Block 
	IfStmt:  IF.Expression Block ELSE IfStmt 
	IfStmt:  IF.SimpleStmt ; Expression Block ELSE IfStmt 
	IfStmt:  IF.Expression Block ELSE Block 
	IfStmt:  IF.SimpleStmt ; Expression Block ELSE Block 
	SimpleStmt: .    (129)

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IDLIST_COLAS  shift 227
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  reduce 129 (src line 778)

	ArrayType  goto 105
	Expression  goto 312
	ExpressionList  goto 226
	MapType  goto 108
	PrimaryExpr  goto 91
	SendStmt  goto 225
	SimpleStmt  goto 313
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 229
	ParameterList1:  ParameterList1 ,.ParameterDecl 
	ParameterDecl2: .    (80)

	DDD  shift 83
	IDENTIFIER_LIST  shift 82
	.  reduce 80 (src line 564)

	ParameterDecl  goto 314
	ParameterDecl2  goto 81

state 230
	Parameters:  ( ParameterDecl ParameterList1 OCOMMA_RPAREN.    (85)

	.  reduce 85 (src line 589)


state 231
	ParameterDecl:  IDENTIFIER_LIST ParameterDecl2 Type.    (79)

	.  reduce 79 (src line 559)


state 232
	SourceFile2:  SourceFile2 FUNC ( Receiver2 TYPE_NAME ) MethodName.MethodDecl1 ; 

	(  shift 40
	.  error

	Function  goto 316
	MethodDecl1  goto 315
	Parameters  goto 39
	Signature  goto 317

state 233
	MethodName:  IDENTIFIER.    (76)

	.  reduce 76 (src line 542)


state 234
	SourceFile2:  SourceFile2 FUNC ( IDENTIFIER Receiver2 TYPE_NAME ).MethodName MethodDecl1 ; 

	IDENTIFIER  shift 233
	.  error

	MethodName  goto 318

state 235
	Expression:  Expression OROR UnaryExpr.    (28)

	.  reduce 28 (src line 323)


state 236
	Expression:  Expression ANDAND UnaryExpr.    (29)

	.  reduce 29 (src line 327)


state 237
	Expression:  Expression EQ UnaryExpr.    (30)

	.  reduce 30 (src line 331)


state 238
	Expression:  Expression NE UnaryExpr.    (31)

	.  reduce 31 (src line 335)


state 239
	Expression:  Expression < UnaryExpr.    (32)

	.  reduce 32 (src line 339)


state 240
	Expression:  Expression LE UnaryExpr.    (33)

	.  reduce 33 (src line 343)


state 241
	Expression:  Expression > UnaryExpr.    (34)

	.  reduce 34 (src line 347)


state 242
	Expression:  Expression GE UnaryExpr.    (35)

	.  reduce 35 (src line 351)


state 243
	Expression:  Expression + UnaryExpr.    (36)

	.  reduce 36 (src line 355)


state 244
	Expression:  Expression - UnaryExpr.    (37)

	.  reduce 37 (src line 359)


state 245
	Expression:  Expression | UnaryExpr.    (38)

	.  reduce 38 (src line 363)


state 246
	Expression:  Expression ^ UnaryExpr.    (39)

	.  reduce 39 (src line 367)


state 247
	Expression:  Expression * UnaryExpr.    (40)

	.  reduce 40 (src line 371)


state 248
	Expression:  Expression / UnaryExpr.    (41)

	.  reduce 41 (src line 375)


state 249
	Expression:  Expression % UnaryExpr.    (42)

	.  reduce 42 (src line 379)


state 250
	Expression:  Expression LSH UnaryExpr.    (43)

	.  reduce 43 (src line 383)


state 251
	Expression:  Expression RSH UnaryExpr.    (44)

	.  reduce 44 (src line 387)


state 252
	Expression:  Expression & UnaryExpr.    (45)

	.  reduce 45 (src line 391)


state 253
	Expression:  Expression ANDNOT UnaryExpr.    (46)

	.  reduce 46 (src line 395)


state 254
	ExpressionList1:  ExpressionList1 ,.Expression 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 319
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 255
	PrimaryExpr:  PrimaryExpr . IDENTIFIER.    (108)

	.  reduce 108 (src line 683)


state 256
	PrimaryExpr:  PrimaryExpr . (.Type ) 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 320
	TypeLit  goto 48
	TypeName  goto 47

state 257
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	PrimaryExpr:  PrimaryExpr [ Expression.] 
	PrimaryExpr:  PrimaryExpr [ Expression.: Slice2 ] 

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	]  shift 321
	:  shift 322
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  error


state 258
	PrimaryExpr:  PrimaryExpr [ :.Slice2 ] 
	Slice2: .    (136)

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  reduce 136 (src line 808)

	ArrayType  goto 105
	Expression  goto 324
	MapType  goto 108
	PrimaryExpr  goto 91
	Slice2  goto 323
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 259
	PrimaryExpr:  PrimaryExpr ( ).    (113)

	.  reduce 113 (src line 703)


state 260
	PrimaryExpr:  PrimaryExpr ( ArgumentList.OCOMMA_RPAREN 

	OCOMMA_RPAREN  shift 325
	.  error


state 261
	ArgumentList:  ExpressionList.    (1)
	ArgumentList:  ExpressionList.DDD 

	DDD  shift 326
	.  reduce 1 (src line 190)


state 262
	LiteralValue:  { }.    (70)

	.  reduce 70 (src line 512)


state 263
	LiteralValue:  { Element.ElementList1 } 
	LiteralValue:  { Element.ElementList1 , } 
	ElementList1: .    (19)

	.  reduce 19 (src line 278)

	ElementList1  goto 327

state 264
	Element:  Value.    (17)

	.  reduce 17 (src line 268)


state 265
	Element:  Expression.: Value 
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	Value:  Expression.    (217)

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	:  shift 328
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 217 (src line 1172)


state 266
	Value:  LiteralValue.    (218)

	.  reduce 218 (src line 1177)


state 267
	PrimaryExpr:  [ DDD ].ElementType LiteralValue 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	ElementType  goto 329
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 124
	TypeLit  goto 48
	TypeName  goto 47

state 268
	PrimaryExpr:  TypeName . MethodName.    (100)

	.  reduce 100 (src line 651)


state 269
	PrimaryExpr:  ( TypeName RPAREN_DOT_METHOD_NAME.    (101)

	.  reduce 101 (src line 655)


state 270
	PrimaryExpr:  TypeName.LiteralValue 
	PrimaryExpr:  TypeName.. MethodName 
	PrimaryExpr:  ( * TypeName.RPAREN_DOT_METHOD_NAME 
	Type:  TypeName.    (183)

	RPAREN_DOT_METHOD_NAME  shift 330
	{  shift 179
	.  shift 185
	.  reduce 183 (src line 1018)

	LiteralValue  goto 184

state 271
	PrimaryExpr:  ( Expression ).    (103)

	.  reduce 103 (src line 663)


state 272
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	PrimaryExpr:  Type ( Expression.OCOMMA_RPAREN 

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OCOMMA_RPAREN  shift 331
	OROR  shift 147
	RSH  shift 163
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  error


state 273
	PrimaryExpr:  Type.( Expression OCOMMA_RPAREN 
	PrimaryExpr:  BUILT_IN_NAME ( Type.OCOMMA_RPAREN 
	PrimaryExpr:  BUILT_IN_NAME ( Type., ArgumentList OCOMMA_RPAREN 

	OCOMMA_RPAREN  shift 332
	(  shift 193
	,  shift 333
	.  error


state 274
	PrimaryExpr:  BUILT_IN_NAME ( ArgumentList.OCOMMA_RPAREN 

	OCOMMA_RPAREN  shift 334
	.  error


state 275
	InterfaceType1:  InterfaceType1 MethodName.Signature ; 

	(  shift 40
	.  error

	Parameters  goto 39
	Signature  goto 335

state 276
	InterfaceType1:  InterfaceType1 TypeName.; 

	;  shift 336
	.  error


state 277
	TypeLit:  INTERFACE { InterfaceType1 }.    (195)

	.  reduce 195 (src line 1073)


state 278
	ArrayType:  [ Expression ] ElementType.    (3)

	.  reduce 3 (src line 200)


state 279
	StructType:  STRUCT { StructType1 }.    (179)

	.  reduce 179 (src line 998)


state 280
	StructType1:  StructType1 FieldDecl1.; 
	StructType1:  StructType1 FieldDecl1.STRING_LIT ; 

	STRING_LIT  shift 338
	;  shift 337
	.  error


state 281
	FieldDecl1:  IDENTIFIER_LIST.Type 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 339
	TypeLit  goto 48
	TypeName  goto 47

state 282
	FieldDecl1:  TypeName.    (51)

	.  reduce 51 (src line 421)


state 283
	FieldDecl1:  *.TypeName 

	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	.  error

	TypeName  goto 340

state 284
	MapType:  MAP [ Type ].ElementType 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	ElementType  goto 341
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 124
	TypeLit  goto 48
	TypeName  goto 47

state 285
	StatementList1:  StatementList1 Statement ;.    (178)

	.  reduce 178 (src line 993)


state 286
	Statement:  Label :.Statement 
	SimpleStmt: .    (129)

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 223
	IDLIST_COLAS  shift 227
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	BREAK  shift 213
	CHAN  shift 59
	CONST  shift 12
	CONTINUE  shift 214
	DEFER  shift 222
	FALLTHROUGH  shift 216
	FOR  shift 221
	FUNC  shift 110
	GO  shift 211
	GOTO  shift 215
	IF  shift 228
	INTERFACE  shift 56
	MAP  shift 64
	RETURN  shift 212
	SELECT  shift 220
	STRUCT  shift 63
	SWITCH  shift 219
	TYPE  shift 13
	VAR  shift 14
	(  shift 113
	[  shift 106
	{  shift 75
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  reduce 129 (src line 778)

	ArrayType  goto 105
	Block  goto 217
	Declaration  goto 208
	Expression  goto 224
	ExpressionList  goto 226
	IfStmt  goto 218
	Label  goto 209
	MapType  goto 108
	PrimaryExpr  goto 91
	SendStmt  goto 225
	SimpleStmt  goto 210
	SliceType  goto 107
	Statement  goto 342
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 287
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	Statement:  GO Expression.    (153)

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 153 (src line 889)


state 288
	Statement:  RETURN ExpressionList.    (155)

	.  reduce 155 (src line 897)


state 289
	Statement:  BREAK Label.    (157)

	.  reduce 157 (src line 905)


state 290
	Label:  IDENTIFIER.    (69)

	.  reduce 69 (src line 506)


state 291
	Statement:  CONTINUE Label.    (159)

	.  reduce 159 (src line 913)


state 292
	Statement:  GOTO Label.    (160)

	.  reduce 160 (src line 917)


state 293
	Statement:  SWITCH ExprSwitchStmt2.{ ExprSwitchStmt3 } 

	{  shift 343
	.  error


state 294
	Statement:  SWITCH SimpleStmt.; ExprSwitchStmt2 { ExprSwitchStmt3 } 
	Statement:  SWITCH SimpleStmt.; TypeSwitchGuard { TypeSwitchStmt2 } 

	;  shift 344
	.  error


state 295
	Statement:  SWITCH TypeSwitchGuard.{ TypeSwitchStmt2 } 

	{  shift 345
	.  error


state 296
	ExprSwitchStmt2:  Expression.    (23)
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	ExpressionList:  Expression.ExpressionList1 
	SendStmt:  Expression.COMM Expression 
	SimpleStmt:  Expression.    (130)
	SimpleStmt:  Expression.INC 
	SimpleStmt:  Expression.DEC 
	ExpressionList1: .    (48)

	ANDAND  shift 148
	ANDNOT  shift 165
	COMM  shift 307
	DEC  shift 309
	EQ  shift 149
	GE  shift 154
	INC  shift 308
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	{  reduce 23 (src line 299)
	;  reduce 130 (src line 783)
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 48 (src line 406)

	ExpressionList1  goto 166

state 297
	SimpleStmt:  IDLIST_COLAS.ExpressionList 
	TypeSwitchGuard:  IDLIST_COLAS.PrimaryExpr . ( TYPE ) 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 89
	ExpressionList  goto 311
	MapType  goto 108
	PrimaryExpr  goto 346
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 298
	PrimaryExpr:  PrimaryExpr.. IDENTIFIER 
	PrimaryExpr:  PrimaryExpr.[ Expression ] 
	PrimaryExpr:  PrimaryExpr.[ : Slice2 ] 
	PrimaryExpr:  PrimaryExpr.[ Expression : Slice2 ] 
	PrimaryExpr:  PrimaryExpr.. ( Type ) 
	PrimaryExpr:  PrimaryExpr.( ) 
	PrimaryExpr:  PrimaryExpr.( ArgumentList OCOMMA_RPAREN 
	TypeSwitchGuard:  PrimaryExpr.. ( TYPE ) 
	UnaryExpr:  PrimaryExpr.    (209)

	(  shift 169
	[  shift 168
	.  shift 347
	.  reduce 209 (src line 1138)


state 299
	Statement:  SELECT {.SelectStmt1 } 
	SelectStmt1: .    (118)

	.  reduce 118 (src line 728)

	SelectStmt1  goto 348

state 300
	Statement:  FOR Block.    (169)

	.  reduce 169 (src line 953)


state 301
	Statement:  FOR Condition.Block 

	{  shift 75
	.  error

	Block  goto 349

state 302
	Statement:  FOR SimpleStmt.; ; SimpleStmt Block 
	Statement:  FOR SimpleStmt.; Condition ; SimpleStmt Block 

	;  shift 350
	.  error


state 303
	SimpleStmt:  ExpressionList.ASSIGN_OP ExpressionList 
	Statement:  FOR ExpressionList.= RANGE Expression Block 

	ASSIGN_OP  shift 310
	=  shift 351
	.  error


state 304
	SimpleStmt:  IDLIST_COLAS.ExpressionList 
	Statement:  FOR IDLIST_COLAS.RANGE Expression Block 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	RANGE  shift 352
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 89
	ExpressionList  goto 311
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 305
	Condition:  Expression.    (5)
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	ExpressionList:  Expression.ExpressionList1 
	SendStmt:  Expression.COMM Expression 
	SimpleStmt:  Expression.    (130)
	SimpleStmt:  Expression.INC 
	SimpleStmt:  Expression.DEC 
	ExpressionList1: .    (48)

	ANDAND  shift 148
	ANDNOT  shift 165
	COMM  shift 307
	DEC  shift 309
	EQ  shift 149
	GE  shift 154
	INC  shift 308
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	{  reduce 5 (src line 212)
	;  reduce 130 (src line 783)
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 48 (src line 406)

	ExpressionList1  goto 166

state 306
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	Statement:  DEFER Expression.    (175)

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 175 (src line 977)


state 307
	SendStmt:  Expression COMM.Expression 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 353
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 308
	SimpleStmt:  Expression INC.    (132)

	.  reduce 132 (src line 791)


state 309
	SimpleStmt:  Expression DEC.    (133)

	.  reduce 133 (src line 795)


state 310
	SimpleStmt:  ExpressionList ASSIGN_OP.ExpressionList 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 89
	ExpressionList  goto 354
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 311
	SimpleStmt:  IDLIST_COLAS ExpressionList.    (135)

	.  reduce 135 (src line 803)


state 312
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	ExpressionList:  Expression.ExpressionList1 
	IfStmt:  IF Expression.Block 
	IfStmt:  IF Expression.Block ELSE IfStmt 
	IfStmt:  IF Expression.Block ELSE Block 
	SendStmt:  Expression.COMM Expression 
	SimpleStmt:  Expression.    (130)
	SimpleStmt:  Expression.INC 
	SimpleStmt:  Expression.DEC 
	ExpressionList1: .    (48)

	ANDAND  shift 148
	ANDNOT  shift 165
	COMM  shift 307
	DEC  shift 309
	EQ  shift 149
	GE  shift 154
	INC  shift 308
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	{  shift 75
	;  reduce 130 (src line 783)
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 48 (src line 406)

	Block  goto 355
	ExpressionList1  goto 166

state 313
	IfStmt:  IF SimpleStmt.; Expression Block 
	IfStmt:  IF SimpleStmt.; Expression Block ELSE IfStmt 
	IfStmt:  IF SimpleStmt.; Expression Block ELSE Block 

	;  shift 356
	.  error


state 314
	ParameterList1:  ParameterList1 , ParameterDecl.    (83)

	.  reduce 83 (src line 579)


state 315
	SourceFile2:  SourceFile2 FUNC ( Receiver2 TYPE_NAME ) MethodName MethodDecl1.; 

	;  shift 357
	.  error


state 316
	MethodDecl1:  Function.    (74)

	.  reduce 74 (src line 532)


state 317
	Function:  Signature.Block 
	MethodDecl1:  Signature.    (75)

	{  shift 75
	.  reduce 75 (src line 537)

	Block  goto 73

state 318
	SourceFile2:  SourceFile2 FUNC ( IDENTIFIER Receiver2 TYPE_NAME ) MethodName.MethodDecl1 ; 

	(  shift 40
	.  error

	Function  goto 316
	MethodDecl1  goto 358
	Parameters  goto 39
	Signature  goto 317

state 319
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	ExpressionList1:  ExpressionList1 , Expression.    (49)

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 49 (src line 411)


state 320
	PrimaryExpr:  PrimaryExpr . ( Type.) 

	)  shift 359
	.  error


state 321
	PrimaryExpr:  PrimaryExpr [ Expression ].    (109)

	.  reduce 109 (src line 687)


state 322
	PrimaryExpr:  PrimaryExpr [ Expression :.Slice2 ] 
	Slice2: .    (136)

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  reduce 136 (src line 808)

	ArrayType  goto 105
	Expression  goto 324
	MapType  goto 108
	PrimaryExpr  goto 91
	Slice2  goto 360
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 323
	PrimaryExpr:  PrimaryExpr [ : Slice2.] 

	]  shift 361
	.  error


state 324
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	Slice2:  Expression.    (137)

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 137 (src line 813)


state 325
	PrimaryExpr:  PrimaryExpr ( ArgumentList OCOMMA_RPAREN.    (114)

	.  reduce 114 (src line 707)


state 326
	ArgumentList:  ExpressionList DDD.    (2)

	.  reduce 2 (src line 195)


state 327
	ElementList1:  ElementList1., Element 
	LiteralValue:  { Element ElementList1.} 
	LiteralValue:  { Element ElementList1., } 

	}  shift 363
	,  shift 362
	.  error


state 328
	Element:  Expression :.Value 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	{  shift 179
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 365
	LiteralValue  goto 266
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90
	Value  goto 364

state 329
	PrimaryExpr:  [ DDD ] ElementType.LiteralValue 

	{  shift 179
	.  error

	LiteralValue  goto 366

state 330
	PrimaryExpr:  ( * TypeName RPAREN_DOT_METHOD_NAME.    (102)

	.  reduce 102 (src line 659)


state 331
	PrimaryExpr:  Type ( Expression OCOMMA_RPAREN.    (104)

	.  reduce 104 (src line 667)


state 332
	PrimaryExpr:  BUILT_IN_NAME ( Type OCOMMA_RPAREN.    (105)

	.  reduce 105 (src line 671)


state 333
	PrimaryExpr:  BUILT_IN_NAME ( Type ,.ArgumentList OCOMMA_RPAREN 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArgumentList  goto 367
	ArrayType  goto 105
	Expression  goto 89
	ExpressionList  goto 261
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 334
	PrimaryExpr:  BUILT_IN_NAME ( ArgumentList OCOMMA_RPAREN.    (107)

	.  reduce 107 (src line 679)


state 335
	InterfaceType1:  InterfaceType1 MethodName Signature.; 

	;  shift 368
	.  error


state 336
	InterfaceType1:  InterfaceType1 TypeName ;.    (68)

	.  reduce 68 (src line 501)


state 337
	StructType1:  StructType1 FieldDecl1 ;.    (181)

	.  reduce 181 (src line 1009)


state 338
	StructType1:  StructType1 FieldDecl1 STRING_LIT.; 

	;  shift 369
	.  error


state 339
	FieldDecl1:  IDENTIFIER_LIST Type.    (50)

	.  reduce 50 (src line 416)


state 340
	FieldDecl1:  * TypeName.    (52)

	.  reduce 52 (src line 425)


state 341
	MapType:  MAP [ Type ] ElementType.    (73)

	.  reduce 73 (src line 526)


state 342
	Statement:  Label : Statement.    (151)

	.  reduce 151 (src line 881)


state 343
	Statement:  SWITCH ExprSwitchStmt2 {.ExprSwitchStmt3 } 
	ExprSwitchStmt3: .    (24)

	.  reduce 24 (src line 304)

	ExprSwitchStmt3  goto 370

state 344
	Statement:  SWITCH SimpleStmt ;.ExprSwitchStmt2 { ExprSwitchStmt3 } 
	Statement:  SWITCH SimpleStmt ;.TypeSwitchGuard { TypeSwitchStmt2 } 
	ExprSwitchStmt2: .    (22)

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IDLIST_COLAS  shift 374
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  reduce 22 (src line 294)

	ArrayType  goto 105
	ExprSwitchStmt2  goto 371
	Expression  goto 373
	MapType  goto 108
	PrimaryExpr  goto 298
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	TypeSwitchGuard  goto 372
	UnaryExpr  goto 90

state 345
	Statement:  SWITCH TypeSwitchGuard {.TypeSwitchStmt2 } 
	TypeSwitchStmt2: .    (206)

	.  reduce 206 (src line 1124)

	TypeSwitchStmt2  goto 375

state 346
	PrimaryExpr:  PrimaryExpr.. IDENTIFIER 
	PrimaryExpr:  PrimaryExpr.[ Expression ] 
	PrimaryExpr:  PrimaryExpr.[ : Slice2 ] 
	PrimaryExpr:  PrimaryExpr.[ Expression : Slice2 ] 
	PrimaryExpr:  PrimaryExpr.. ( Type ) 
	PrimaryExpr:  PrimaryExpr.( ) 
	PrimaryExpr:  PrimaryExpr.( ArgumentList OCOMMA_RPAREN 
	TypeSwitchGuard:  IDLIST_COLAS PrimaryExpr.. ( TYPE ) 
	UnaryExpr:  PrimaryExpr.    (209)

	(  shift 169
	[  shift 168
	.  shift 376
	.  reduce 209 (src line 1138)


state 347
	PrimaryExpr:  PrimaryExpr ..IDENTIFIER 
	PrimaryExpr:  PrimaryExpr ..( Type ) 
	TypeSwitchGuard:  PrimaryExpr ..( TYPE ) 

	IDENTIFIER  shift 255
	(  shift 377
	.  error


state 348
	SelectStmt1:  SelectStmt1.CASE SendStmt : StatementList 
	SelectStmt1:  SelectStmt1.CASE RecvExpr : StatementList 
	SelectStmt1:  SelectStmt1.CASE ExpressionList = RecvExpr : StatementList 
	SelectStmt1:  SelectStmt1.CASE IDLIST_COLAS RecvExpr : StatementList 
	SelectStmt1:  SelectStmt1.DEFAULT : StatementList 
	Statement:  SELECT { SelectStmt1.} 

	CASE  shift 378
	DEFAULT  shift 379
	}  shift 380
	.  error


state 349
	Statement:  FOR Condition Block.    (170)

	.  reduce 170 (src line 957)


state 350
	Statement:  FOR SimpleStmt ;.; SimpleStmt Block 
	Statement:  FOR SimpleStmt ;.Condition ; SimpleStmt Block 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	;  shift 381
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Condition  goto 382
	Expression  goto 383
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 351
	Statement:  FOR ExpressionList =.RANGE Expression Block 

	RANGE  shift 384
	.  error


state 352
	Statement:  FOR IDLIST_COLAS RANGE.Expression Block 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 385
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 353
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	SendStmt:  Expression COMM Expression.    (124)

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 124 (src line 754)


state 354
	SimpleStmt:  ExpressionList ASSIGN_OP ExpressionList.    (134)

	.  reduce 134 (src line 799)


state 355
	IfStmt:  IF Expression Block.    (55)
	IfStmt:  IF Expression Block.ELSE IfStmt 
	IfStmt:  IF Expression Block.ELSE Block 

	ELSE  shift 386
	.  reduce 55 (src line 442)


state 356
	IfStmt:  IF SimpleStmt ;.Expression Block 
	IfStmt:  IF SimpleStmt ;.Expression Block ELSE IfStmt 
	IfStmt:  IF SimpleStmt ;.Expression Block ELSE Block 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 387
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 357
	SourceFile2:  SourceFile2 FUNC ( Receiver2 TYPE_NAME ) MethodName MethodDecl1 ;.    (147)

	.  reduce 147 (src line 861)


state 358
	SourceFile2:  SourceFile2 FUNC ( IDENTIFIER Receiver2 TYPE_NAME ) MethodName MethodDecl1.; 

	;  shift 388
	.  error


state 359
	PrimaryExpr:  PrimaryExpr . ( Type ).    (112)

	.  reduce 112 (src line 699)


state 360
	PrimaryExpr:  PrimaryExpr [ Expression : Slice2.] 

	]  shift 389
	.  error


state 361
	PrimaryExpr:  PrimaryExpr [ : Slice2 ].    (110)

	.  reduce 110 (src line 691)


state 362
	ElementList1:  ElementList1 ,.Element 
	LiteralValue:  { Element ElementList1 ,.} 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	{  shift 179
	}  shift 391
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Element  goto 390
	Expression  goto 265
	LiteralValue  goto 266
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90
	Value  goto 264

state 363
	LiteralValue:  { Element ElementList1 }.    (71)

	.  reduce 71 (src line 517)


state 364
	Element:  Expression : Value.    (18)

	.  reduce 18 (src line 273)


state 365
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	Value:  Expression.    (217)

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 217 (src line 1172)


state 366
	PrimaryExpr:  [ DDD ] ElementType LiteralValue.    (93)

	.  reduce 93 (src line 623)


state 367
	PrimaryExpr:  BUILT_IN_NAME ( Type , ArgumentList.OCOMMA_RPAREN 

	OCOMMA_RPAREN  shift 392
	.  error


state 368
	InterfaceType1:  InterfaceType1 MethodName Signature ;.    (67)

	.  reduce 67 (src line 497)


state 369
	StructType1:  StructType1 FieldDecl1 STRING_LIT ;.    (182)

	.  reduce 182 (src line 1013)


state 370
	ExprSwitchStmt3:  ExprSwitchStmt3.CASE ExpressionList : StatementList 
	ExprSwitchStmt3:  ExprSwitchStmt3.DEFAULT : StatementList 
	Statement:  SWITCH ExprSwitchStmt2 { ExprSwitchStmt3.} 

	CASE  shift 393
	DEFAULT  shift 394
	}  shift 395
	.  error


state 371
	Statement:  SWITCH SimpleStmt ; ExprSwitchStmt2.{ ExprSwitchStmt3 } 

	{  shift 396
	.  error


state 372
	Statement:  SWITCH SimpleStmt ; TypeSwitchGuard.{ TypeSwitchStmt2 } 

	{  shift 397
	.  error


state 373
	ExprSwitchStmt2:  Expression.    (23)
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 23 (src line 299)


state 374
	TypeSwitchGuard:  IDLIST_COLAS.PrimaryExpr . ( TYPE ) 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	*  shift 54
	.  error

	ArrayType  goto 105
	MapType  goto 108
	PrimaryExpr  goto 398
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109

state 375
	Statement:  SWITCH TypeSwitchGuard { TypeSwitchStmt2.} 
	TypeSwitchStmt2:  TypeSwitchStmt2.CASE Type TypeList1 : StatementList 
	TypeSwitchStmt2:  TypeSwitchStmt2.DEFAULT : StatementList 

	CASE  shift 400
	DEFAULT  shift 401
	}  shift 399
	.  error


state 376
	PrimaryExpr:  PrimaryExpr ..IDENTIFIER 
	PrimaryExpr:  PrimaryExpr ..( Type ) 
	TypeSwitchGuard:  IDLIST_COLAS PrimaryExpr ..( TYPE ) 

	IDENTIFIER  shift 255
	(  shift 402
	.  error


state 377
	PrimaryExpr:  PrimaryExpr . (.Type ) 
	TypeSwitchGuard:  PrimaryExpr . (.TYPE ) 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	TYPE  shift 403
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 320
	TypeLit  goto 48
	TypeName  goto 47

state 378
	SelectStmt1:  SelectStmt1 CASE.SendStmt : StatementList 
	SelectStmt1:  SelectStmt1 CASE.RecvExpr : StatementList 
	SelectStmt1:  SelectStmt1 CASE.ExpressionList = RecvExpr : StatementList 
	SelectStmt1:  SelectStmt1 CASE.IDLIST_COLAS RecvExpr : StatementList 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IDLIST_COLAS  shift 407
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 408
	ExpressionList  goto 406
	MapType  goto 108
	PrimaryExpr  goto 91
	RecvExpr  goto 405
	SendStmt  goto 404
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 379
	SelectStmt1:  SelectStmt1 DEFAULT.: StatementList 

	:  shift 409
	.  error


state 380
	Statement:  SELECT { SelectStmt1 }.    (168)

	.  reduce 168 (src line 949)


state 381
	Statement:  FOR SimpleStmt ; ;.SimpleStmt Block 
	SimpleStmt: .    (129)

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IDLIST_COLAS  shift 227
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  reduce 129 (src line 778)

	ArrayType  goto 105
	Expression  goto 224
	ExpressionList  goto 226
	MapType  goto 108
	PrimaryExpr  goto 91
	SendStmt  goto 225
	SimpleStmt  goto 410
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 382
	Statement:  FOR SimpleStmt ; Condition.; SimpleStmt Block 

	;  shift 411
	.  error


state 383
	Condition:  Expression.    (5)
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 5 (src line 212)


state 384
	Statement:  FOR ExpressionList = RANGE.Expression Block 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 412
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 385
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	Statement:  FOR IDLIST_COLAS RANGE Expression.Block 

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	{  shift 75
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  error

	Block  goto 413

state 386
	IfStmt:  IF Expression Block ELSE.IfStmt 
	IfStmt:  IF Expression Block ELSE.Block 

	IF  shift 228
	{  shift 75
	.  error

	Block  goto 415
	IfStmt  goto 414

state 387
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	IfStmt:  IF SimpleStmt ; Expression.Block 
	IfStmt:  IF SimpleStmt ; Expression.Block ELSE IfStmt 
	IfStmt:  IF SimpleStmt ; Expression.Block ELSE Block 

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	{  shift 75
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  error

	Block  goto 416

state 388
	SourceFile2:  SourceFile2 FUNC ( IDENTIFIER Receiver2 TYPE_NAME ) MethodName MethodDecl1 ;.    (148)

	.  reduce 148 (src line 865)


state 389
	PrimaryExpr:  PrimaryExpr [ Expression : Slice2 ].    (111)

	.  reduce 111 (src line 695)


state 390
	ElementList1:  ElementList1 , Element.    (20)

	.  reduce 20 (src line 283)


state 391
	LiteralValue:  { Element ElementList1 , }.    (72)

	.  reduce 72 (src line 521)


state 392
	PrimaryExpr:  BUILT_IN_NAME ( Type , ArgumentList OCOMMA_RPAREN.    (106)

	.  reduce 106 (src line 675)


state 393
	ExprSwitchStmt3:  ExprSwitchStmt3 CASE.ExpressionList : StatementList 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 89
	ExpressionList  goto 417
	MapType  goto 108
	PrimaryExpr  goto 91
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 394
	ExprSwitchStmt3:  ExprSwitchStmt3 DEFAULT.: StatementList 

	:  shift 418
	.  error


state 395
	Statement:  SWITCH ExprSwitchStmt2 { ExprSwitchStmt3 }.    (164)

	.  reduce 164 (src line 933)


state 396
	Statement:  SWITCH SimpleStmt ; ExprSwitchStmt2 {.ExprSwitchStmt3 } 
	ExprSwitchStmt3: .    (24)

	.  reduce 24 (src line 304)

	ExprSwitchStmt3  goto 419

state 397
	Statement:  SWITCH SimpleStmt ; TypeSwitchGuard {.TypeSwitchStmt2 } 
	TypeSwitchStmt2: .    (206)

	.  reduce 206 (src line 1124)

	TypeSwitchStmt2  goto 420

state 398
	PrimaryExpr:  PrimaryExpr.. IDENTIFIER 
	PrimaryExpr:  PrimaryExpr.[ Expression ] 
	PrimaryExpr:  PrimaryExpr.[ : Slice2 ] 
	PrimaryExpr:  PrimaryExpr.[ Expression : Slice2 ] 
	PrimaryExpr:  PrimaryExpr.. ( Type ) 
	PrimaryExpr:  PrimaryExpr.( ) 
	PrimaryExpr:  PrimaryExpr.( ArgumentList OCOMMA_RPAREN 
	TypeSwitchGuard:  IDLIST_COLAS PrimaryExpr.. ( TYPE ) 

	(  shift 169
	[  shift 168
	.  shift 376
	.  error


state 399
	Statement:  SWITCH TypeSwitchGuard { TypeSwitchStmt2 }.    (166)

	.  reduce 166 (src line 941)


state 400
	TypeSwitchStmt2:  TypeSwitchStmt2 CASE.Type TypeList1 : StatementList 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 421
	TypeLit  goto 48
	TypeName  goto 47

state 401
	TypeSwitchStmt2:  TypeSwitchStmt2 DEFAULT.: StatementList 

	:  shift 422
	.  error


state 402
	PrimaryExpr:  PrimaryExpr . (.Type ) 
	TypeSwitchGuard:  IDLIST_COLAS PrimaryExpr . (.TYPE ) 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	TYPE  shift 423
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 320
	TypeLit  goto 48
	TypeName  goto 47

state 403
	TypeSwitchGuard:  PrimaryExpr . ( TYPE.) 

	)  shift 424
	.  error


state 404
	SelectStmt1:  SelectStmt1 CASE SendStmt.: StatementList 

	:  shift 425
	.  error


state 405
	SelectStmt1:  SelectStmt1 CASE RecvExpr.: StatementList 

	:  shift 426
	.  error


state 406
	SelectStmt1:  SelectStmt1 CASE ExpressionList.= RecvExpr : StatementList 

	=  shift 427
	.  error


state 407
	SelectStmt1:  SelectStmt1 CASE IDLIST_COLAS.RecvExpr : StatementList 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 429
	MapType  goto 108
	PrimaryExpr  goto 91
	RecvExpr  goto 428
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 408
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	ExpressionList:  Expression.ExpressionList1 
	RecvExpr:  Expression.    (117)
	SendStmt:  Expression.COMM Expression 
	ExpressionList1: .    (48)

	ANDAND  shift 148
	ANDNOT  shift 165
	COMM  shift 307
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	:  reduce 117 (src line 722)
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 48 (src line 406)

	ExpressionList1  goto 166

state 409
	SelectStmt1:  SelectStmt1 DEFAULT :.StatementList 
	StatementList1: .    (177)

	.  reduce 177 (src line 988)

	StatementList  goto 430
	StatementList1  goto 140

state 410
	Statement:  FOR SimpleStmt ; ; SimpleStmt.Block 

	{  shift 75
	.  error

	Block  goto 431

state 411
	Statement:  FOR SimpleStmt ; Condition ;.SimpleStmt Block 
	SimpleStmt: .    (129)

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IDLIST_COLAS  shift 227
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  reduce 129 (src line 778)

	ArrayType  goto 105
	Expression  goto 224
	ExpressionList  goto 226
	MapType  goto 108
	PrimaryExpr  goto 91
	SendStmt  goto 225
	SimpleStmt  goto 432
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 412
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	Statement:  FOR ExpressionList = RANGE Expression.Block 

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	{  shift 75
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  error

	Block  goto 433

state 413
	Statement:  FOR IDLIST_COLAS RANGE Expression Block.    (174)

	.  reduce 174 (src line 973)


state 414
	IfStmt:  IF Expression Block ELSE IfStmt.    (57)

	.  reduce 57 (src line 451)


state 415
	IfStmt:  IF Expression Block ELSE Block.    (59)

	.  reduce 59 (src line 459)


state 416
	IfStmt:  IF SimpleStmt ; Expression Block.    (56)
	IfStmt:  IF SimpleStmt ; Expression Block.ELSE IfStmt 
	IfStmt:  IF SimpleStmt ; Expression Block.ELSE Block 

	ELSE  shift 434
	.  reduce 56 (src line 447)


state 417
	ExprSwitchStmt3:  ExprSwitchStmt3 CASE ExpressionList.: StatementList 

	:  shift 435
	.  error


state 418
	ExprSwitchStmt3:  ExprSwitchStmt3 DEFAULT :.StatementList 
	StatementList1: .    (177)

	.  reduce 177 (src line 988)

	StatementList  goto 436
	StatementList1  goto 140

state 419
	ExprSwitchStmt3:  ExprSwitchStmt3.CASE ExpressionList : StatementList 
	ExprSwitchStmt3:  ExprSwitchStmt3.DEFAULT : StatementList 
	Statement:  SWITCH SimpleStmt ; ExprSwitchStmt2 { ExprSwitchStmt3.} 

	CASE  shift 393
	DEFAULT  shift 394
	}  shift 437
	.  error


state 420
	Statement:  SWITCH SimpleStmt ; TypeSwitchGuard { TypeSwitchStmt2.} 
	TypeSwitchStmt2:  TypeSwitchStmt2.CASE Type TypeList1 : StatementList 
	TypeSwitchStmt2:  TypeSwitchStmt2.DEFAULT : StatementList 

	CASE  shift 400
	DEFAULT  shift 401
	}  shift 438
	.  error


state 421
	TypeSwitchStmt2:  TypeSwitchStmt2 CASE Type.TypeList1 : StatementList 
	TypeList1: .    (189)

	.  reduce 189 (src line 1046)

	TypeList1  goto 439

state 422
	TypeSwitchStmt2:  TypeSwitchStmt2 DEFAULT :.StatementList 
	StatementList1: .    (177)

	.  reduce 177 (src line 988)

	StatementList  goto 440
	StatementList1  goto 140

state 423
	TypeSwitchGuard:  IDLIST_COLAS PrimaryExpr . ( TYPE.) 

	)  shift 441
	.  error


state 424
	TypeSwitchGuard:  PrimaryExpr . ( TYPE ).    (204)

	.  reduce 204 (src line 1114)


state 425
	SelectStmt1:  SelectStmt1 CASE SendStmt :.StatementList 
	StatementList1: .    (177)

	.  reduce 177 (src line 988)

	StatementList  goto 442
	StatementList1  goto 140

state 426
	SelectStmt1:  SelectStmt1 CASE RecvExpr :.StatementList 
	StatementList1: .    (177)

	.  reduce 177 (src line 988)

	StatementList  goto 443
	StatementList1  goto 140

state 427
	SelectStmt1:  SelectStmt1 CASE ExpressionList =.RecvExpr : StatementList 

	BUILT_IN_NAME  shift 115
	CHANCOMM  shift 60
	COMM  shift 98
	COMMCHAN  shift 61
	FLOAT_LIT  shift 100
	IDENTIFIER  shift 111
	IMAGINARY_LIT  shift 101
	INT_LIT  shift 99
	PACK_NAME  shift 112
	RUNE_LIT  shift 102
	STRING_LIT  shift 103
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 110
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 113
	[  shift 106
	+  shift 92
	-  shift 93
	^  shift 95
	*  shift 96
	&  shift 97
	!  shift 94
	.  error

	ArrayType  goto 105
	Expression  goto 429
	MapType  goto 108
	PrimaryExpr  goto 91
	RecvExpr  goto 444
	SliceType  goto 107
	StructType  goto 104
	Type  goto 114
	TypeLit  goto 48
	TypeName  goto 109
	UnaryExpr  goto 90

state 428
	SelectStmt1:  SelectStmt1 CASE IDLIST_COLAS RecvExpr.: StatementList 

	:  shift 445
	.  error


state 429
	Expression:  Expression.OROR UnaryExpr 
	Expression:  Expression.ANDAND UnaryExpr 
	Expression:  Expression.EQ UnaryExpr 
	Expression:  Expression.NE UnaryExpr 
	Expression:  Expression.< UnaryExpr 
	Expression:  Expression.LE UnaryExpr 
	Expression:  Expression.> UnaryExpr 
	Expression:  Expression.GE UnaryExpr 
	Expression:  Expression.+ UnaryExpr 
	Expression:  Expression.- UnaryExpr 
	Expression:  Expression.| UnaryExpr 
	Expression:  Expression.^ UnaryExpr 
	Expression:  Expression.* UnaryExpr 
	Expression:  Expression./ UnaryExpr 
	Expression:  Expression.% UnaryExpr 
	Expression:  Expression.LSH UnaryExpr 
	Expression:  Expression.RSH UnaryExpr 
	Expression:  Expression.& UnaryExpr 
	Expression:  Expression.ANDNOT UnaryExpr 
	RecvExpr:  Expression.    (117)

	ANDAND  shift 148
	ANDNOT  shift 165
	EQ  shift 149
	GE  shift 154
	LE  shift 152
	LSH  shift 162
	NE  shift 150
	OROR  shift 147
	RSH  shift 163
	<  shift 151
	>  shift 153
	+  shift 155
	-  shift 156
	|  shift 157
	^  shift 158
	*  shift 159
	/  shift 160
	%  shift 161
	&  shift 164
	.  reduce 117 (src line 722)


state 430
	SelectStmt1:  SelectStmt1 DEFAULT : StatementList.    (123)

	.  reduce 123 (src line 749)


state 431
	Statement:  FOR SimpleStmt ; ; SimpleStmt Block.    (171)

	.  reduce 171 (src line 961)


state 432
	Statement:  FOR SimpleStmt ; Condition ; SimpleStmt.Block 

	{  shift 75
	.  error

	Block  goto 446

state 433
	Statement:  FOR ExpressionList = RANGE Expression Block.    (173)

	.  reduce 173 (src line 969)


state 434
	IfStmt:  IF SimpleStmt ; Expression Block ELSE.IfStmt 
	IfStmt:  IF SimpleStmt ; Expression Block ELSE.Block 

	IF  shift 228
	{  shift 75
	.  error

	Block  goto 448
	IfStmt  goto 447

state 435
	ExprSwitchStmt3:  ExprSwitchStmt3 CASE ExpressionList :.StatementList 
	StatementList1: .    (177)

	.  reduce 177 (src line 988)

	StatementList  goto 449
	StatementList1  goto 140

state 436
	ExprSwitchStmt3:  ExprSwitchStmt3 DEFAULT : StatementList.    (26)

	.  reduce 26 (src line 313)


state 437
	Statement:  SWITCH SimpleStmt ; ExprSwitchStmt2 { ExprSwitchStmt3 }.    (165)

	.  reduce 165 (src line 937)


state 438
	Statement:  SWITCH SimpleStmt ; TypeSwitchGuard { TypeSwitchStmt2 }.    (167)

	.  reduce 167 (src line 945)


state 439
	TypeList1:  TypeList1., Type 
	TypeSwitchStmt2:  TypeSwitchStmt2 CASE Type TypeList1.: StatementList 

	:  shift 451
	,  shift 450
	.  error


state 440
	TypeSwitchStmt2:  TypeSwitchStmt2 DEFAULT : StatementList.    (208)

	.  reduce 208 (src line 1133)


state 441
	TypeSwitchGuard:  IDLIST_COLAS PrimaryExpr . ( TYPE ).    (205)

	.  reduce 205 (src line 1119)


state 442
	SelectStmt1:  SelectStmt1 CASE SendStmt : StatementList.    (119)

	.  reduce 119 (src line 733)


state 443
	SelectStmt1:  SelectStmt1 CASE RecvExpr : StatementList.    (120)

	.  reduce 120 (src line 737)


state 444
	SelectStmt1:  SelectStmt1 CASE ExpressionList = RecvExpr.: StatementList 

	:  shift 452
	.  error


state 445
	SelectStmt1:  SelectStmt1 CASE IDLIST_COLAS RecvExpr :.StatementList 
	StatementList1: .    (177)

	.  reduce 177 (src line 988)

	StatementList  goto 453
	StatementList1  goto 140

state 446
	Statement:  FOR SimpleStmt ; Condition ; SimpleStmt Block.    (172)

	.  reduce 172 (src line 965)


state 447
	IfStmt:  IF SimpleStmt ; Expression Block ELSE IfStmt.    (58)

	.  reduce 58 (src line 455)


state 448
	IfStmt:  IF SimpleStmt ; Expression Block ELSE Block.    (60)

	.  reduce 60 (src line 463)


state 449
	ExprSwitchStmt3:  ExprSwitchStmt3 CASE ExpressionList : StatementList.    (25)

	.  reduce 25 (src line 309)


state 450
	TypeList1:  TypeList1 ,.Type 

	CHANCOMM  shift 60
	COMMCHAN  shift 61
	PACK_NAME  shift 51
	TYPE_NAME  shift 50
	CHAN  shift 59
	FUNC  shift 55
	INTERFACE  shift 56
	MAP  shift 64
	STRUCT  shift 63
	(  shift 49
	[  shift 62
	*  shift 54
	.  error

	ArrayType  goto 52
	MapType  goto 58
	SliceType  goto 57
	StructType  goto 53
	Type  goto 454
	TypeLit  goto 48
	TypeName  goto 47

state 451
	TypeSwitchStmt2:  TypeSwitchStmt2 CASE Type TypeList1 :.StatementList 
	StatementList1: .    (177)

	.  reduce 177 (src line 988)

	StatementList  goto 455
	StatementList1  goto 140

state 452
	SelectStmt1:  SelectStmt1 CASE ExpressionList = RecvExpr :.StatementList 
	StatementList1: .    (177)

	.  reduce 177 (src line 988)

	StatementList  goto 456
	StatementList1  goto 140

state 453
	SelectStmt1:  SelectStmt1 CASE IDLIST_COLAS RecvExpr : StatementList.    (122)

	.  reduce 122 (src line 745)


state 454
	TypeList1:  TypeList1 , Type.    (190)

	.  reduce 190 (src line 1051)


state 455
	TypeSwitchStmt2:  TypeSwitchStmt2 CASE Type TypeList1 : StatementList.    (207)

	.  reduce 207 (src line 1129)


state 456
	SelectStmt1:  SelectStmt1 CASE ExpressionList = RecvExpr : StatementList.    (121)

	.  reduce 121 (src line 741)


80 terminals, 63 nonterminals
224 grammar rules, 457/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
162 working sets used
memory: parser 1655/30000
224 extra closures
2726 shift entries, 12 exceptions
357 goto entries
658 entries saved by goto default
Optimizer space used: output 2499/30000
2499 table entries, 1193 zero
maximum spread: 80, maximum offset: 452
