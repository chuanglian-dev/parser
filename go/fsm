colas	A
const	C
func	F
ident	I
struct  S
var	V
list	{ident}(,{ident})*
rx	\({ident}?\*?{ident}\)

%%

({const}|{var})\(?{list}
{func}((\({rx}\))?{ident})?\({list}
{struct}\{{list}
{list}{colas}

%%

DFA:
[1]
	"C", "V", --> 2
	"F"--> 5
	"I"--> 16
	"S"--> 19
[2]
	"("--> 3
	"I"--> 4
[3]
	"I"--> 4
[4]
	","--> 3
[5]
	"("--> 6
	"I"--> 12
[6]
	"("--> 7
	"I"--> 14
[7]
	"*"--> 8
	"I"--> 15
[8]
	"I"--> 9
[9]
	")"--> 10
[10]
	")"--> 11
[11]
	"I"--> 12
[12]
	"("--> 13
[13]
	"I"--> 14
[14]
	","--> 13
[15]
	"*"--> 8
	"I"--> 9
	")"--> 10
[16]
	","--> 17
	"A"--> 18
[17]
	"I"--> 16
[18]
[19]
	"{"--> 20
[20]
	"I"--> 21
[21]
	","--> 20
state 4 accepts rule 1		// const var
state 14 accepts rule 2		// struct
state 18 accepts rule 4		// func
state 21 accepts rule 3		// colas

...............................................................................
PrimaryExpr:
|	FUNC Function						// 1
SourceFile2:
|	SourceFile2 FUNC IDENTIFIER Function ';'		// 2
|	SourceFile2 FUNC IDENTIFIER Signature ';'		// 3
|	SourceFile2 FUNC Receiver MethodName Function ';'	// 4
|	SourceFile2 FUNC Receiver MethodName Signature ';'	// 5
TypeLit:
|	FUNC Signature						// 6

----

FUNC '(' params ')' '(' result ')' '{' ...				// 1a
FUNC '(' params ')' '{' ...						// 1b

FUNC IDENTIFIER '(' params ')' '(' result ')' '{' ...			// 2c
FUNC IDENTIFIER '(' params ')' '{' ...					// 2d

FUNC IDENTIFIER '(' params ')' '(' result ')' ';'			// 3e
FUNC IDENTIFIER '(' params ')' ';'					// 3f

FUNC '(' receiver ')' IDENTIFIER '(' params ')' '(' result ')' '{' ...	// 4g
FUNC '(' receiver ')' IDENTIFIER '(' params ')' '{' ...			// 4h

FUNC '(' receiver ')' IDENTIFIER '(' params ')' '(' result ')' ';'	// 5i
FUNC '(' receiver ')' IDENTIFIER '(' params ')' ';'			// 5j

FUNC '(' params ')' '(' result ')'					// 6k
FUNC '(' params ')'							// 6l
....

FUNC '(' list				// abkl
FUNC IDENTIFIER '(' list		// cdef
FUNC '(' rx ')' IDENTIFIER '(' list 	// ghij
....
